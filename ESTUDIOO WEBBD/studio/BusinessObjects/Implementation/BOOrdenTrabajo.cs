/*************************************************************
** Class generated by CodeTrigger, Version 4.3.0.6
** CodeTrigger is an Exotechnic Corporation (UK) Ltd Product 
** This class was generated on 08/06/2014 17:05:12
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using studio.DataObjects;

namespace studio.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOOrdenTrabajo.
	///</Summary>
	public partial class BOOrdenTrabajo : DATACONN0_BaseBusiness
	{
		#region member variables
		protected string _cie;
		protected Int32? _idEven;
		protected string _descripcion;
		protected DateTime? _fechaO;
		protected DateTime? _fechaE;
		protected Int64? _nro;
		protected string _estado;
		protected Int16? _porcentaje;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOOrdenTrabajo()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///string cie, Int32 idEven
		///</parameters>
		public BOOrdenTrabajo(string cie, Int32 idEven)
		{
			try
			{
				DAOOrdenTrabajo daoOrdenTrabajo = DAOOrdenTrabajo.SelectOne(cie, idEven);
				_cie = daoOrdenTrabajo.Cie;
				_idEven = daoOrdenTrabajo.IdEven;
				_descripcion = daoOrdenTrabajo.Descripcion;
				_fechaO = daoOrdenTrabajo.FechaO;
				_fechaE = daoOrdenTrabajo.FechaE;
				_nro = daoOrdenTrabajo.Nro;
				_estado = daoOrdenTrabajo.Estado;
				_porcentaje = daoOrdenTrabajo.Porcentaje;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///Constructor using unique field(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Nro
		///</parameters>
		public BOOrdenTrabajo(Int64 nro)
		{
			try
			{
				DAOOrdenTrabajo daoOrdenTrabajo = DAOOrdenTrabajo.SelectOneByNro(nro);
				_cie = daoOrdenTrabajo.Cie;
				_idEven = daoOrdenTrabajo.IdEven;
				_descripcion = daoOrdenTrabajo.Descripcion;
				_fechaO = daoOrdenTrabajo.FechaO;
				_fechaE = daoOrdenTrabajo.FechaE;
				_nro = daoOrdenTrabajo.Nro;
				_estado = daoOrdenTrabajo.Estado;
				_porcentaje = daoOrdenTrabajo.Porcentaje;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOOrdenTrabajo
		///</parameters>
		protected internal BOOrdenTrabajo(DAOOrdenTrabajo daoOrdenTrabajo)
		{
			try
			{
				_cie = daoOrdenTrabajo.Cie;
				_idEven = daoOrdenTrabajo.IdEven;
				_descripcion = daoOrdenTrabajo.Descripcion;
				_fechaO = daoOrdenTrabajo.FechaO;
				_fechaE = daoOrdenTrabajo.FechaE;
				_nro = daoOrdenTrabajo.Nro;
				_estado = daoOrdenTrabajo.Estado;
				_porcentaje = daoOrdenTrabajo.Porcentaje;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new OrdenTrabajo record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOOrdenTrabajo daoOrdenTrabajo = new DAOOrdenTrabajo();
			RegisterDataObject(daoOrdenTrabajo);
			BeginTransaction("savenewBOOrdenTrabajo");
			try
			{
				daoOrdenTrabajo.Cie = _cie;
				daoOrdenTrabajo.IdEven = _idEven;
				daoOrdenTrabajo.Descripcion = _descripcion;
				daoOrdenTrabajo.FechaO = _fechaO;
				daoOrdenTrabajo.FechaE = _fechaE;
				daoOrdenTrabajo.Estado = _estado;
				daoOrdenTrabajo.Porcentaje = _porcentaje;
				daoOrdenTrabajo.Insert();
				CommitTransaction();
				
				_cie = daoOrdenTrabajo.Cie;
				_idEven = daoOrdenTrabajo.IdEven;
				_descripcion = daoOrdenTrabajo.Descripcion;
				_fechaO = daoOrdenTrabajo.FechaO;
				_fechaE = daoOrdenTrabajo.FechaE;
				_nro = daoOrdenTrabajo.Nro;
				_estado = daoOrdenTrabajo.Estado;
				_porcentaje = daoOrdenTrabajo.Porcentaje;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOOrdenTrabajo");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one OrdenTrabajo record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOOrdenTrabajo
		///</parameters>
		public virtual void Update()
		{
			DAOOrdenTrabajo daoOrdenTrabajo = new DAOOrdenTrabajo();
			RegisterDataObject(daoOrdenTrabajo);
			BeginTransaction("updateBOOrdenTrabajo");
			try
			{
				daoOrdenTrabajo.Cie = _cie;
				daoOrdenTrabajo.IdEven = _idEven;
				daoOrdenTrabajo.Descripcion = _descripcion;
				daoOrdenTrabajo.FechaO = _fechaO;
				daoOrdenTrabajo.FechaE = _fechaE;
				daoOrdenTrabajo.Nro = _nro;
				daoOrdenTrabajo.Estado = _estado;
				daoOrdenTrabajo.Porcentaje = _porcentaje;
				daoOrdenTrabajo.Update();
				CommitTransaction();
				
				_cie = daoOrdenTrabajo.Cie;
				_idEven = daoOrdenTrabajo.IdEven;
				_descripcion = daoOrdenTrabajo.Descripcion;
				_fechaO = daoOrdenTrabajo.FechaO;
				_fechaE = daoOrdenTrabajo.FechaE;
				_nro = daoOrdenTrabajo.Nro;
				_estado = daoOrdenTrabajo.Estado;
				_porcentaje = daoOrdenTrabajo.Porcentaje;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOOrdenTrabajo");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one OrdenTrabajo record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOOrdenTrabajo daoOrdenTrabajo = new DAOOrdenTrabajo();
			RegisterDataObject(daoOrdenTrabajo);
			BeginTransaction("deleteBOOrdenTrabajo");
			try
			{
				daoOrdenTrabajo.Cie = _cie;
				daoOrdenTrabajo.IdEven = _idEven;
				daoOrdenTrabajo.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOOrdenTrabajo");
				throw;
			}
		}
		
		///<Summary>
		///OrdenTrabajoCollection
		///This method returns the collection of BOOrdenTrabajo objects
		///</Summary>
		///<returns>
		///List[BOOrdenTrabajo]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static List<BOOrdenTrabajo> OrdenTrabajoCollection()
		{
			List<BOOrdenTrabajo> boOrdenTrabajoCollection = new List<BOOrdenTrabajo>();
			List<DAOOrdenTrabajo> daoOrdenTrabajoCollection = DAOOrdenTrabajo.SelectAll();
			
			foreach(DAOOrdenTrabajo daoOrdenTrabajo in daoOrdenTrabajoCollection)
				boOrdenTrabajoCollection.Add(new BOOrdenTrabajo(daoOrdenTrabajo));
			
			 return boOrdenTrabajoCollection;
			
		}
		
		
		///<Summary>
		///OrdenTrabajoCollectionCount
		///This method returns the collection count of BOOrdenTrabajo objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 OrdenTrabajoCollectionCount()
		{
			Int32 objCount = DAOOrdenTrabajo.SelectAllCount();
			return objCount;
			
		}
		
		
		public static List<BOOrdenTrabajo> OrdenTrabajoCollectionFromSearchFields(BOOrdenTrabajo boOrdenTrabajo)
		{
			List<BOOrdenTrabajo> boOrdenTrabajoCollection = new List<BOOrdenTrabajo>();
			DAOOrdenTrabajo daoOrdenTrabajo = new DAOOrdenTrabajo();
			daoOrdenTrabajo.Cie = boOrdenTrabajo.Cie;
			daoOrdenTrabajo.IdEven = boOrdenTrabajo.IdEven;
			daoOrdenTrabajo.Descripcion = boOrdenTrabajo.Descripcion;
			daoOrdenTrabajo.FechaO = boOrdenTrabajo.FechaO;
			daoOrdenTrabajo.FechaE = boOrdenTrabajo.FechaE;
			daoOrdenTrabajo.Nro = boOrdenTrabajo.Nro;
			daoOrdenTrabajo.Estado = boOrdenTrabajo.Estado;
			daoOrdenTrabajo.Porcentaje = boOrdenTrabajo.Porcentaje;
			List<DAOOrdenTrabajo> daoOrdenTrabajoCollection = DAOOrdenTrabajo.SelectAllBySearchFields(daoOrdenTrabajo);
			
			foreach(DAOOrdenTrabajo resdaoOrdenTrabajo in daoOrdenTrabajoCollection)
				boOrdenTrabajoCollection.Add(new BOOrdenTrabajo(resdaoOrdenTrabajo));
			
			return boOrdenTrabajoCollection;
			
		}
		
		
		public static Int32 OrdenTrabajoCollectionFromSearchFieldsCount(BOOrdenTrabajo boOrdenTrabajo)
		{
			DAOOrdenTrabajo daoOrdenTrabajo = new DAOOrdenTrabajo();
			daoOrdenTrabajo.Cie = boOrdenTrabajo.Cie;
			daoOrdenTrabajo.IdEven = boOrdenTrabajo.IdEven;
			daoOrdenTrabajo.Descripcion = boOrdenTrabajo.Descripcion;
			daoOrdenTrabajo.FechaO = boOrdenTrabajo.FechaO;
			daoOrdenTrabajo.FechaE = boOrdenTrabajo.FechaE;
			daoOrdenTrabajo.Nro = boOrdenTrabajo.Nro;
			daoOrdenTrabajo.Estado = boOrdenTrabajo.Estado;
			daoOrdenTrabajo.Porcentaje = boOrdenTrabajo.Porcentaje;
			Int32 objCount = DAOOrdenTrabajo.SelectAllBySearchFieldsCount(daoOrdenTrabajo);
			
			return objCount;
			
		}
		
		#endregion

		#region member properties
		
		public virtual string Cie
		{
			get
			{
				 return _cie;
			}
			set
			{
				_cie = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? IdEven
		{
			get
			{
				 return _idEven;
			}
			set
			{
				_idEven = value;
				_isDirty = true;
			}
		}
		
		public virtual string Descripcion
		{
			get
			{
				 return _descripcion;
			}
			set
			{
				_descripcion = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? FechaO
		{
			get
			{
				 return _fechaO;
			}
			set
			{
				_fechaO = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? FechaE
		{
			get
			{
				 return _fechaE;
			}
			set
			{
				_fechaE = value;
				_isDirty = true;
			}
		}
		
		public virtual Int64? Nro
		{
			get
			{
				 return _nro;
			}
			set
			{
				_nro = value;
				_isDirty = true;
			}
		}
		
		public virtual string Estado
		{
			get
			{
				 return _estado;
			}
			set
			{
				_estado = value;
				_isDirty = true;
			}
		}
		
		public virtual Int16? Porcentaje
		{
			get
			{
				 return _porcentaje;
			}
			set
			{
				_porcentaje = value;
				_isDirty = true;
			}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
