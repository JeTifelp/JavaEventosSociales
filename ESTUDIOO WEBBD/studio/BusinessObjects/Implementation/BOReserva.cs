/*************************************************************
** Class generated by CodeTrigger, Version 4.3.0.6
** CodeTrigger is an Exotechnic Corporation (UK) Ltd Product 
** This class was generated on 08/06/2014 17:05:12
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using studio.DataObjects;

namespace studio.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOReserva.
	///</Summary>
	public partial class BOReserva : DATACONN0_BaseBusiness
	{
		#region member variables
		protected Int32? _id;
		protected DateTime? _fechaR;
		protected DateTime? _fechaE;
		protected Int16? _diasEspera;
		protected string _interasado;
		protected string _descripcion;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOReserva()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 id
		///</parameters>
		public BOReserva(Int32 id)
		{
			try
			{
				DAOReserva daoReserva = DAOReserva.SelectOne(id);
				_id = daoReserva.Id;
				_fechaR = daoReserva.FechaR;
				_fechaE = daoReserva.FechaE;
				_diasEspera = daoReserva.DiasEspera;
				_interasado = daoReserva.Interasado;
				_descripcion = daoReserva.Descripcion;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOReserva
		///</parameters>
		protected internal BOReserva(DAOReserva daoReserva)
		{
			try
			{
				_id = daoReserva.Id;
				_fechaR = daoReserva.FechaR;
				_fechaE = daoReserva.FechaE;
				_diasEspera = daoReserva.DiasEspera;
				_interasado = daoReserva.Interasado;
				_descripcion = daoReserva.Descripcion;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new Reserva record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOReserva daoReserva = new DAOReserva();
			RegisterDataObject(daoReserva);
			BeginTransaction("savenewBOReserva");
			try
			{
				daoReserva.Id = _id;
				daoReserva.FechaR = _fechaR;
				daoReserva.FechaE = _fechaE;
				daoReserva.DiasEspera = _diasEspera;
				daoReserva.Interasado = _interasado;
				daoReserva.Descripcion = _descripcion;
				daoReserva.Insert();
				CommitTransaction();
				
				_id = daoReserva.Id;
				_fechaR = daoReserva.FechaR;
				_fechaE = daoReserva.FechaE;
				_diasEspera = daoReserva.DiasEspera;
				_interasado = daoReserva.Interasado;
				_descripcion = daoReserva.Descripcion;
				_isDirty = false;
			}
			catch (Exception e)
			{
				RollbackTransaction("savenewBOReserva");
				throw e ;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one Reserva record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOReserva
		///</parameters>
		public virtual void Update()
		{
			DAOReserva daoReserva = new DAOReserva();
			RegisterDataObject(daoReserva);
			BeginTransaction("updateBOReserva");
			try
			{
				daoReserva.Id = _id;
				daoReserva.FechaR = _fechaR;
				daoReserva.FechaE = _fechaE;
				daoReserva.DiasEspera = _diasEspera;
				daoReserva.Interasado = _interasado;
				daoReserva.Descripcion = _descripcion;
				daoReserva.Update();
				CommitTransaction();
				
				_id = daoReserva.Id;
				_fechaR = daoReserva.FechaR;
				_fechaE = daoReserva.FechaE;
				_diasEspera = daoReserva.DiasEspera;
				_interasado = daoReserva.Interasado;
				_descripcion = daoReserva.Descripcion;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOReserva");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one Reserva record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOReserva daoReserva = new DAOReserva();
			RegisterDataObject(daoReserva);
			BeginTransaction("deleteBOReserva");
			try
			{
				daoReserva.Id = _id;
				daoReserva.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOReserva");
				throw;
			}
		}
		
		///<Summary>
		///ReservaCollection
		///This method returns the collection of BOReserva objects
		///</Summary>
		///<returns>
		///List[BOReserva]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static List<BOReserva> ReservaCollection()
		{
			List<BOReserva> boReservaCollection = new List<BOReserva>();
			List<DAOReserva> daoReservaCollection = DAOReserva.SelectAll();
			
			foreach(DAOReserva daoReserva in daoReservaCollection)
				boReservaCollection.Add(new BOReserva(daoReserva));
			
			 return boReservaCollection;
			
		}
		
		
		///<Summary>
		///ReservaCollectionCount
		///This method returns the collection count of BOReserva objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 ReservaCollectionCount()
		{
			Int32 objCount = DAOReserva.SelectAllCount();
			return objCount;
			
		}
		
		
		public static List<BOReserva> ReservaCollectionFromSearchFields(BOReserva boReserva)
		{
			List<BOReserva> boReservaCollection = new List<BOReserva>();
			DAOReserva daoReserva = new DAOReserva();
			daoReserva.Id = boReserva.Id;
			daoReserva.FechaR = boReserva.FechaR;
			daoReserva.FechaE = boReserva.FechaE;
			daoReserva.DiasEspera = boReserva.DiasEspera;
			daoReserva.Interasado = boReserva.Interasado;
			daoReserva.Descripcion = boReserva.Descripcion;
			List<DAOReserva> daoReservaCollection = DAOReserva.SelectAllBySearchFields(daoReserva);
			
			foreach(DAOReserva resdaoReserva in daoReservaCollection)
				boReservaCollection.Add(new BOReserva(resdaoReserva));
			
			return boReservaCollection;
			
		}
		
		
		public static Int32 ReservaCollectionFromSearchFieldsCount(BOReserva boReserva)
		{
			DAOReserva daoReserva = new DAOReserva();
			daoReserva.Id = boReserva.Id;
			daoReserva.FechaR = boReserva.FechaR;
			daoReserva.FechaE = boReserva.FechaE;
			daoReserva.DiasEspera = boReserva.DiasEspera;
			daoReserva.Interasado = boReserva.Interasado;
			daoReserva.Descripcion = boReserva.Descripcion;
			Int32 objCount = DAOReserva.SelectAllBySearchFieldsCount(daoReserva);
			
			return objCount;
			
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? Id
		{
			get
			{
				 return _id;
			}
			set
			{
				_id = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? FechaR
		{
			get
			{
				 return _fechaR;
			}
			set
			{
				_fechaR = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? FechaE
		{
			get
			{
				 return _fechaE;
			}
			set
			{
				_fechaE = value;
				_isDirty = true;
			}
		}
		
		public virtual Int16? DiasEspera
		{
			get
			{
				 return _diasEspera;
			}
			set
			{
				_diasEspera = value;
				_isDirty = true;
			}
		}
		
		public virtual string Interasado
		{
			get
			{
				 return _interasado;
			}
			set
			{
				_interasado = value;
				_isDirty = true;
			}
		}
		
		public virtual string Descripcion
		{
			get
			{
				 return _descripcion;
			}
			set
			{
				_descripcion = value;
				_isDirty = true;
			}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
