/*************************************************************
** Class generated by CodeTrigger, Version 4.3.0.6
** CodeTrigger is an Exotechnic Corporation (UK) Ltd Product 
** This class was generated on 08/06/2014 17:05:12
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using studio.DataObjects;

namespace studio.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOTipoEvento.
	///</Summary>
	public partial class BOTipoEvento : DATACONN0_BaseBusiness
	{
		#region member variables
		protected Int16? _id;
		protected string _nombre;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOTipoEvento()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int16 id
		///</parameters>
		public BOTipoEvento(Int16 id)
		{
			try
			{
				DAOTipoEvento daoTipoEvento = DAOTipoEvento.SelectOne(id);
				_id = daoTipoEvento.Id;
				_nombre = daoTipoEvento.Nombre;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///Constructor using unique field(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Nombre
		///</parameters>
		public BOTipoEvento(string nombre)
		{
			try
			{
				DAOTipoEvento daoTipoEvento = DAOTipoEvento.SelectOneByNombre(nombre);
				_id = daoTipoEvento.Id;
				_nombre = daoTipoEvento.Nombre;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOTipoEvento
		///</parameters>
		protected internal BOTipoEvento(DAOTipoEvento daoTipoEvento)
		{
			try
			{
				_id = daoTipoEvento.Id;
				_nombre = daoTipoEvento.Nombre;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new TipoEvento record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOTipoEvento daoTipoEvento = new DAOTipoEvento();
			RegisterDataObject(daoTipoEvento);
			BeginTransaction("savenewBOTipoEvento");
			try
			{
				daoTipoEvento.Nombre = _nombre;
				daoTipoEvento.Insert();
				CommitTransaction();
				
				_id = daoTipoEvento.Id;
				_nombre = daoTipoEvento.Nombre;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOTipoEvento");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one TipoEvento record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOTipoEvento
		///</parameters>
		public virtual void Update()
		{
			DAOTipoEvento daoTipoEvento = new DAOTipoEvento();
			RegisterDataObject(daoTipoEvento);
			BeginTransaction("updateBOTipoEvento");
			try
			{
				daoTipoEvento.Id = _id;
				daoTipoEvento.Nombre = _nombre;
				daoTipoEvento.Update();
				CommitTransaction();
				
				_id = daoTipoEvento.Id;
				_nombre = daoTipoEvento.Nombre;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOTipoEvento");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one TipoEvento record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOTipoEvento daoTipoEvento = new DAOTipoEvento();
			RegisterDataObject(daoTipoEvento);
			BeginTransaction("deleteBOTipoEvento");
			try
			{
				daoTipoEvento.Id = _id;
				daoTipoEvento.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOTipoEvento");
				throw;
			}
		}
		
		///<Summary>
		///TipoEventoCollection
		///This method returns the collection of BOTipoEvento objects
		///</Summary>
		///<returns>
		///List[BOTipoEvento]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static List<BOTipoEvento> TipoEventoCollection()
		{
			List<BOTipoEvento> boTipoEventoCollection = new List<BOTipoEvento>();
			List<DAOTipoEvento> daoTipoEventoCollection = DAOTipoEvento.SelectAll();
			
			foreach(DAOTipoEvento daoTipoEvento in daoTipoEventoCollection)
				boTipoEventoCollection.Add(new BOTipoEvento(daoTipoEvento));
			
			 return boTipoEventoCollection;
			
		}
		
		
		///<Summary>
		///TipoEventoCollectionCount
		///This method returns the collection count of BOTipoEvento objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 TipoEventoCollectionCount()
		{
			Int32 objCount = DAOTipoEvento.SelectAllCount();
			return objCount;
			
		}
		
		
		public static List<BOTipoEvento> TipoEventoCollectionFromSearchFields(BOTipoEvento boTipoEvento)
		{
			List<BOTipoEvento> boTipoEventoCollection = new List<BOTipoEvento>();
			DAOTipoEvento daoTipoEvento = new DAOTipoEvento();
			daoTipoEvento.Id = boTipoEvento.Id;
			daoTipoEvento.Nombre = boTipoEvento.Nombre;
			List<DAOTipoEvento> daoTipoEventoCollection = DAOTipoEvento.SelectAllBySearchFields(daoTipoEvento);
			
			foreach(DAOTipoEvento resdaoTipoEvento in daoTipoEventoCollection)
				boTipoEventoCollection.Add(new BOTipoEvento(resdaoTipoEvento));
			
			return boTipoEventoCollection;
			
		}
		
		
		public static Int32 TipoEventoCollectionFromSearchFieldsCount(BOTipoEvento boTipoEvento)
		{
			DAOTipoEvento daoTipoEvento = new DAOTipoEvento();
			daoTipoEvento.Id = boTipoEvento.Id;
			daoTipoEvento.Nombre = boTipoEvento.Nombre;
			Int32 objCount = DAOTipoEvento.SelectAllBySearchFieldsCount(daoTipoEvento);
			
			return objCount;
			
		}
		
		#endregion

		#region member properties
		
		public virtual Int16? Id
		{
			get
			{
				 return _id;
			}
			set
			{
				_id = value;
				_isDirty = true;
			}
		}
		
		public virtual string Nombre
		{
			get
			{
				 return _nombre;
			}
			set
			{
				_nombre = value;
				_isDirty = true;
			}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
