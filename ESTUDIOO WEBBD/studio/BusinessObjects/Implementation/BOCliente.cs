/*************************************************************
** Class generated by CodeTrigger, Version 4.3.0.6
** CodeTrigger is an Exotechnic Corporation (UK) Ltd Product 
** This class was generated on 08/06/2014 17:05:12
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using studio.DataObjects;

namespace studio.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOCliente.
	///</Summary>
	public partial class BOCliente : DATACONN0_BaseBusiness
	{
		#region member variables
		protected string _ci;
		protected DateTime? _fechaReg;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOCliente()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///string ci
		///</parameters>
		public BOCliente(string ci)
		{
			try
			{
				DAOCliente daoCliente = DAOCliente.SelectOne(ci);
				_ci = daoCliente.Ci;
				_fechaReg = daoCliente.FechaReg;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOCliente
		///</parameters>
		protected internal BOCliente(DAOCliente daoCliente)
		{
			try
			{
				_ci = daoCliente.Ci;
				_fechaReg = daoCliente.FechaReg;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new Cliente record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOCliente daoCliente = new DAOCliente();
			RegisterDataObject(daoCliente);
			BeginTransaction("savenewBOCliente");
			try
			{
				daoCliente.Ci = _ci;
				daoCliente.FechaReg = _fechaReg;
				daoCliente.Insert();
				CommitTransaction();
				
				_ci = daoCliente.Ci;
				_fechaReg = daoCliente.FechaReg;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOCliente");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one Cliente record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOCliente
		///</parameters>
		public virtual void Update()
		{
			DAOCliente daoCliente = new DAOCliente();
			RegisterDataObject(daoCliente);
			BeginTransaction("updateBOCliente");
			try
			{
				daoCliente.Ci = _ci;
				daoCliente.FechaReg = _fechaReg;
				daoCliente.Update();
				CommitTransaction();
				
				_ci = daoCliente.Ci;
				_fechaReg = daoCliente.FechaReg;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOCliente");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one Cliente record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOCliente daoCliente = new DAOCliente();
			RegisterDataObject(daoCliente);
			BeginTransaction("deleteBOCliente");
			try
			{
				daoCliente.Ci = _ci;
				daoCliente.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOCliente");
				throw;
			}
		}
		
		///<Summary>
		///ClienteCollection
		///This method returns the collection of BOCliente objects
		///</Summary>
		///<returns>
		///List[BOCliente]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static List<BOCliente> ClienteCollection()
		{
			List<BOCliente> boClienteCollection = new List<BOCliente>();
			List<DAOCliente> daoClienteCollection = DAOCliente.SelectAll();
			
			foreach(DAOCliente daoCliente in daoClienteCollection)
				boClienteCollection.Add(new BOCliente(daoCliente));
			
			 return boClienteCollection;
			
		}
		
		
		///<Summary>
		///ClienteCollectionCount
		///This method returns the collection count of BOCliente objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 ClienteCollectionCount()
		{
			Int32 objCount = DAOCliente.SelectAllCount();
			return objCount;
			
		}
		
		
		public static List<BOCliente> ClienteCollectionFromSearchFields(BOCliente boCliente)
		{
			List<BOCliente> boClienteCollection = new List<BOCliente>();
			DAOCliente daoCliente = new DAOCliente();
			daoCliente.Ci = boCliente.Ci;
			daoCliente.FechaReg = boCliente.FechaReg;
			List<DAOCliente> daoClienteCollection = DAOCliente.SelectAllBySearchFields(daoCliente);
			
			foreach(DAOCliente resdaoCliente in daoClienteCollection)
				boClienteCollection.Add(new BOCliente(resdaoCliente));
			
			return boClienteCollection;
			
		}
		
		
		public static Int32 ClienteCollectionFromSearchFieldsCount(BOCliente boCliente)
		{
			DAOCliente daoCliente = new DAOCliente();
			daoCliente.Ci = boCliente.Ci;
			daoCliente.FechaReg = boCliente.FechaReg;
			Int32 objCount = DAOCliente.SelectAllBySearchFieldsCount(daoCliente);
			
			return objCount;
			
		}
		
		#endregion

		#region member properties
		
		public virtual string Ci
		{
			get
			{
				 return _ci;
			}
			set
			{
				_ci = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? FechaReg
		{
			get
			{
				 return _fechaReg;
			}
			set
			{
				_fechaReg = value;
				_isDirty = true;
			}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
