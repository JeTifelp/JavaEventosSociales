/*************************************************************
** Class generated by CodeTrigger, Version 4.3.0.6
** CodeTrigger is an Exotechnic Corporation (UK) Ltd Product 
** This class was generated on 08/06/2014 17:05:12
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using studio.DataObjects;

namespace studio.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOPersona.
	///</Summary>
	public partial class BOPersona : DATACONN0_BaseBusiness
	{
		#region member variables
		protected string _ci;
		protected string _nombre;
		protected string _aPellidoP;
		protected string _aPellidoM;
		protected string _direccion;
		protected bool? _sexo;
		protected string _telefono;
		protected string _email;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOPersona()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///string ci
		///</parameters>
		public BOPersona(string ci)
		{
			try
			{
				DAOPersona daoPersona = DAOPersona.SelectOne(ci);
				_ci = daoPersona.Ci;
				_nombre = daoPersona.Nombre;
				_aPellidoP = daoPersona.APellidoP;
				_aPellidoM = daoPersona.APellidoM;
				_direccion = daoPersona.Direccion;
				_sexo = daoPersona.Sexo;
				_telefono = daoPersona.Telefono;
				_email = daoPersona.Email;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOPersona
		///</parameters>
		protected internal BOPersona(DAOPersona daoPersona)
		{
			try
			{
				_ci = daoPersona.Ci;
				_nombre = daoPersona.Nombre;
				_aPellidoP = daoPersona.APellidoP;
				_aPellidoM = daoPersona.APellidoM;
				_direccion = daoPersona.Direccion;
				_sexo = daoPersona.Sexo;
				_telefono = daoPersona.Telefono;
				_email = daoPersona.Email;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new Persona record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOPersona daoPersona = new DAOPersona();
			RegisterDataObject(daoPersona);
			BeginTransaction("savenewBOPersona");
			try
			{
				daoPersona.Ci = _ci;
				daoPersona.Nombre = _nombre;
				daoPersona.APellidoP = _aPellidoP;
				daoPersona.APellidoM = _aPellidoM;
				daoPersona.Direccion = _direccion;
				daoPersona.Sexo = _sexo;
				daoPersona.Telefono = _telefono;
				daoPersona.Email = _email;
				daoPersona.Insert();
				CommitTransaction();
				
				_ci = daoPersona.Ci;
				_nombre = daoPersona.Nombre;
				_aPellidoP = daoPersona.APellidoP;
				_aPellidoM = daoPersona.APellidoM;
				_direccion = daoPersona.Direccion;
				_sexo = daoPersona.Sexo;
				_telefono = daoPersona.Telefono;
				_email = daoPersona.Email;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOPersona");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one Persona record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOPersona
		///</parameters>
		public virtual void Update()
		{
			DAOPersona daoPersona = new DAOPersona();
			RegisterDataObject(daoPersona);
			BeginTransaction("updateBOPersona");
			try
			{
				daoPersona.Ci = _ci;
				daoPersona.Nombre = _nombre;
				daoPersona.APellidoP = _aPellidoP;
				daoPersona.APellidoM = _aPellidoM;
				daoPersona.Direccion = _direccion;
				daoPersona.Sexo = _sexo;
				daoPersona.Telefono = _telefono;
				daoPersona.Email = _email;
				daoPersona.Update();
				CommitTransaction();
				
				_ci = daoPersona.Ci;
				_nombre = daoPersona.Nombre;
				_aPellidoP = daoPersona.APellidoP;
				_aPellidoM = daoPersona.APellidoM;
				_direccion = daoPersona.Direccion;
				_sexo = daoPersona.Sexo;
				_telefono = daoPersona.Telefono;
				_email = daoPersona.Email;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOPersona");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one Persona record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOPersona daoPersona = new DAOPersona();
			RegisterDataObject(daoPersona);
			BeginTransaction("deleteBOPersona");
			try
			{
				daoPersona.Ci = _ci;
				daoPersona.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOPersona");
				throw;
			}
		}
		
		///<Summary>
		///PersonaCollection
		///This method returns the collection of BOPersona objects
		///</Summary>
		///<returns>
		///List[BOPersona]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static List<BOPersona> PersonaCollection()
		{
			List<BOPersona> boPersonaCollection = new List<BOPersona>();
			List<DAOPersona> daoPersonaCollection = DAOPersona.SelectAll();
			
			foreach(DAOPersona daoPersona in daoPersonaCollection)
				boPersonaCollection.Add(new BOPersona(daoPersona));
			
			 return boPersonaCollection;
			
		}
		
		
		///<Summary>
		///PersonaCollectionCount
		///This method returns the collection count of BOPersona objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 PersonaCollectionCount()
		{
			Int32 objCount = DAOPersona.SelectAllCount();
			return objCount;
			
		}
		
		
		public static List<BOPersona> PersonaCollectionFromSearchFields(BOPersona boPersona)
		{
			List<BOPersona> boPersonaCollection = new List<BOPersona>();
			DAOPersona daoPersona = new DAOPersona();
			daoPersona.Ci = boPersona.Ci;
			daoPersona.Nombre = boPersona.Nombre;
			daoPersona.APellidoP = boPersona.APellidoP;
			daoPersona.APellidoM = boPersona.APellidoM;
			daoPersona.Direccion = boPersona.Direccion;
			daoPersona.Sexo = boPersona.Sexo;
			daoPersona.Telefono = boPersona.Telefono;
			daoPersona.Email = boPersona.Email;
			List<DAOPersona> daoPersonaCollection = DAOPersona.SelectAllBySearchFields(daoPersona);
			
			foreach(DAOPersona resdaoPersona in daoPersonaCollection)
				boPersonaCollection.Add(new BOPersona(resdaoPersona));
			
			return boPersonaCollection;
			
		}
		
		
		public static Int32 PersonaCollectionFromSearchFieldsCount(BOPersona boPersona)
		{
			DAOPersona daoPersona = new DAOPersona();
			daoPersona.Ci = boPersona.Ci;
			daoPersona.Nombre = boPersona.Nombre;
			daoPersona.APellidoP = boPersona.APellidoP;
			daoPersona.APellidoM = boPersona.APellidoM;
			daoPersona.Direccion = boPersona.Direccion;
			daoPersona.Sexo = boPersona.Sexo;
			daoPersona.Telefono = boPersona.Telefono;
			daoPersona.Email = boPersona.Email;
			Int32 objCount = DAOPersona.SelectAllBySearchFieldsCount(daoPersona);
			
			return objCount;
			
		}
		
		#endregion

		#region member properties
		
		public virtual string Ci
		{
			get
			{
				 return _ci;
			}
			set
			{
				_ci = value;
				_isDirty = true;
			}
		}
		
		public virtual string Nombre
		{
			get
			{
				 return _nombre;
			}
			set
			{
				_nombre = value;
				_isDirty = true;
			}
		}
		
		public virtual string APellidoP
		{
			get
			{
				 return _aPellidoP;
			}
			set
			{
				_aPellidoP = value;
				_isDirty = true;
			}
		}
		
		public virtual string APellidoM
		{
			get
			{
				 return _aPellidoM;
			}
			set
			{
				_aPellidoM = value;
				_isDirty = true;
			}
		}
		
		public virtual string Direccion
		{
			get
			{
				 return _direccion;
			}
			set
			{
				_direccion = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? Sexo
		{
			get
			{
				 return _sexo;
			}
			set
			{
				_sexo = value;
				_isDirty = true;
			}
		}
		
		public virtual string Telefono
		{
			get
			{
				 return _telefono;
			}
			set
			{
				_telefono = value;
				_isDirty = true;
			}
		}
		
		public virtual string Email
		{
			get
			{
				 return _email;
			}
			set
			{
				_email = value;
				_isDirty = true;
			}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
