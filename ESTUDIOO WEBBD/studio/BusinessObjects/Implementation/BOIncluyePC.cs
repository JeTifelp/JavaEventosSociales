/*************************************************************
** Class generated by CodeTrigger, Version 4.3.0.6
** CodeTrigger is an Exotechnic Corporation (UK) Ltd Product 
** This class was generated on 08/06/2014 17:05:12
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using studio.DataObjects;

namespace studio.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOIncluyePC.
	///</Summary>
	public partial class BOIncluyePC : DATACONN0_BaseBusiness
	{
		#region member variables
		protected Int32? _idPaq;
		protected Int16? _idCP;
		protected Int16? _cantidad;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOIncluyePC()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 idPaq, Int16 idCP
		///</parameters>
		public BOIncluyePC(Int32 idPaq, Int16 idCP)
		{
			try
			{
				DAOIncluyePC daoIncluyePC = DAOIncluyePC.SelectOne(idPaq, idCP);
				_idPaq = daoIncluyePC.IdPaq;
				_idCP = daoIncluyePC.IdCP;
				_cantidad = daoIncluyePC.Cantidad;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOIncluyePC
		///</parameters>
		protected internal BOIncluyePC(DAOIncluyePC daoIncluyePC)
		{
			try
			{
				_idPaq = daoIncluyePC.IdPaq;
				_idCP = daoIncluyePC.IdCP;
				_cantidad = daoIncluyePC.Cantidad;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new IncluyePC record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOIncluyePC daoIncluyePC = new DAOIncluyePC();
			RegisterDataObject(daoIncluyePC);
			BeginTransaction("savenewBOIncluyePC");
			try
			{
				daoIncluyePC.IdPaq = _idPaq;
				daoIncluyePC.IdCP = _idCP;
				daoIncluyePC.Cantidad = _cantidad;
				daoIncluyePC.Insert();
				CommitTransaction();
				
				_idPaq = daoIncluyePC.IdPaq;
				_idCP = daoIncluyePC.IdCP;
				_cantidad = daoIncluyePC.Cantidad;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOIncluyePC");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one IncluyePC record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOIncluyePC
		///</parameters>
		public virtual void Update()
		{
			DAOIncluyePC daoIncluyePC = new DAOIncluyePC();
			RegisterDataObject(daoIncluyePC);
			BeginTransaction("updateBOIncluyePC");
			try
			{
				daoIncluyePC.IdPaq = _idPaq;
				daoIncluyePC.IdCP = _idCP;
				daoIncluyePC.Cantidad = _cantidad;
				daoIncluyePC.Update();
				CommitTransaction();
				
				_idPaq = daoIncluyePC.IdPaq;
				_idCP = daoIncluyePC.IdCP;
				_cantidad = daoIncluyePC.Cantidad;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOIncluyePC");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one IncluyePC record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOIncluyePC daoIncluyePC = new DAOIncluyePC();
			RegisterDataObject(daoIncluyePC);
			BeginTransaction("deleteBOIncluyePC");
			try
			{
				daoIncluyePC.IdPaq = _idPaq;
				daoIncluyePC.IdCP = _idCP;
				daoIncluyePC.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOIncluyePC");
				throw;
			}
		}
		
		///<Summary>
		///IncluyePCCollection
		///This method returns the collection of BOIncluyePC objects
		///</Summary>
		///<returns>
		///List[BOIncluyePC]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static List<BOIncluyePC> IncluyePCCollection()
		{
			List<BOIncluyePC> boIncluyePCCollection = new List<BOIncluyePC>();
			List<DAOIncluyePC> daoIncluyePCCollection = DAOIncluyePC.SelectAll();
			
			foreach(DAOIncluyePC daoIncluyePC in daoIncluyePCCollection)
				boIncluyePCCollection.Add(new BOIncluyePC(daoIncluyePC));
			
			 return boIncluyePCCollection;
			
		}
		
		
		///<Summary>
		///IncluyePCCollectionCount
		///This method returns the collection count of BOIncluyePC objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 IncluyePCCollectionCount()
		{
			Int32 objCount = DAOIncluyePC.SelectAllCount();
			return objCount;
			
		}
		
		
		public static List<BOIncluyePC> IncluyePCCollectionFromSearchFields(BOIncluyePC boIncluyePC)
		{
			List<BOIncluyePC> boIncluyePCCollection = new List<BOIncluyePC>();
			DAOIncluyePC daoIncluyePC = new DAOIncluyePC();
			daoIncluyePC.IdPaq = boIncluyePC.IdPaq;
			daoIncluyePC.IdCP = boIncluyePC.IdCP;
			daoIncluyePC.Cantidad = boIncluyePC.Cantidad;
			List<DAOIncluyePC> daoIncluyePCCollection = DAOIncluyePC.SelectAllBySearchFields(daoIncluyePC);
			
			foreach(DAOIncluyePC resdaoIncluyePC in daoIncluyePCCollection)
				boIncluyePCCollection.Add(new BOIncluyePC(resdaoIncluyePC));
			
			return boIncluyePCCollection;
			
		}
		
		
		public static Int32 IncluyePCCollectionFromSearchFieldsCount(BOIncluyePC boIncluyePC)
		{
			DAOIncluyePC daoIncluyePC = new DAOIncluyePC();
			daoIncluyePC.IdPaq = boIncluyePC.IdPaq;
			daoIncluyePC.IdCP = boIncluyePC.IdCP;
			daoIncluyePC.Cantidad = boIncluyePC.Cantidad;
			Int32 objCount = DAOIncluyePC.SelectAllBySearchFieldsCount(daoIncluyePC);
			
			return objCount;
			
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? IdPaq
		{
			get
			{
				 return _idPaq;
			}
			set
			{
				_idPaq = value;
				_isDirty = true;
			}
		}
		
		public virtual Int16? IdCP
		{
			get
			{
				 return _idCP;
			}
			set
			{
				_idCP = value;
				_isDirty = true;
			}
		}
		
		public virtual Int16? Cantidad
		{
			get
			{
				 return _cantidad;
			}
			set
			{
				_cantidad = value;
				_isDirty = true;
			}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
