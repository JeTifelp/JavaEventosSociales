/*************************************************************
** Class generated by CodeTrigger, Version 4.3.0.6
** CodeTrigger is an Exotechnic Corporation (UK) Ltd Product 
** This class was generated on 08/06/2014 17:05:12
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using studio.DataObjects;

namespace studio.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOTipoEquipo.
	///</Summary>
	public partial class BOTipoEquipo : DATACONN0_BaseBusiness
	{
		#region member variables
		protected Int16? _id;
		protected string _nombre;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOTipoEquipo()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int16 id
		///</parameters>
		public BOTipoEquipo(Int16 id)
		{
			try
			{
				DAOTipoEquipo daoTipoEquipo = DAOTipoEquipo.SelectOne(id);
				_id = daoTipoEquipo.Id;
				_nombre = daoTipoEquipo.Nombre;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///Constructor using unique field(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Nombre
		///</parameters>
		public BOTipoEquipo(string nombre)
		{
			try
			{
				DAOTipoEquipo daoTipoEquipo = DAOTipoEquipo.SelectOneByNombre(nombre);
				_id = daoTipoEquipo.Id;
				_nombre = daoTipoEquipo.Nombre;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOTipoEquipo
		///</parameters>
		protected internal BOTipoEquipo(DAOTipoEquipo daoTipoEquipo)
		{
			try
			{
				_id = daoTipoEquipo.Id;
				_nombre = daoTipoEquipo.Nombre;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new TipoEquipo record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOTipoEquipo daoTipoEquipo = new DAOTipoEquipo();
			RegisterDataObject(daoTipoEquipo);
			BeginTransaction("savenewBOTipoEquipo");
			try
			{
				daoTipoEquipo.Nombre = _nombre;
				daoTipoEquipo.Insert();
				CommitTransaction();
				
				_id = daoTipoEquipo.Id;
				_nombre = daoTipoEquipo.Nombre;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOTipoEquipo");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one TipoEquipo record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOTipoEquipo
		///</parameters>
		public virtual void Update()
		{
			DAOTipoEquipo daoTipoEquipo = new DAOTipoEquipo();
			RegisterDataObject(daoTipoEquipo);
			BeginTransaction("updateBOTipoEquipo");
			try
			{
				daoTipoEquipo.Id = _id;
				daoTipoEquipo.Nombre = _nombre;
				daoTipoEquipo.Update();
				CommitTransaction();
				
				_id = daoTipoEquipo.Id;
				_nombre = daoTipoEquipo.Nombre;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOTipoEquipo");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one TipoEquipo record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOTipoEquipo daoTipoEquipo = new DAOTipoEquipo();
			RegisterDataObject(daoTipoEquipo);
			BeginTransaction("deleteBOTipoEquipo");
			try
			{
				daoTipoEquipo.Id = _id;
				daoTipoEquipo.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOTipoEquipo");
				throw;
			}
		}
		
		///<Summary>
		///TipoEquipoCollection
		///This method returns the collection of BOTipoEquipo objects
		///</Summary>
		///<returns>
		///List[BOTipoEquipo]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static List<BOTipoEquipo> TipoEquipoCollection()
		{
			List<BOTipoEquipo> boTipoEquipoCollection = new List<BOTipoEquipo>();
			List<DAOTipoEquipo> daoTipoEquipoCollection = DAOTipoEquipo.SelectAll();
			
			foreach(DAOTipoEquipo daoTipoEquipo in daoTipoEquipoCollection)
				boTipoEquipoCollection.Add(new BOTipoEquipo(daoTipoEquipo));
			
			 return boTipoEquipoCollection;
			
		}
		
		
		///<Summary>
		///TipoEquipoCollectionCount
		///This method returns the collection count of BOTipoEquipo objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 TipoEquipoCollectionCount()
		{
			Int32 objCount = DAOTipoEquipo.SelectAllCount();
			return objCount;
			
		}
		
		
		public static List<BOTipoEquipo> TipoEquipoCollectionFromSearchFields(BOTipoEquipo boTipoEquipo)
		{
			List<BOTipoEquipo> boTipoEquipoCollection = new List<BOTipoEquipo>();
			DAOTipoEquipo daoTipoEquipo = new DAOTipoEquipo();
			daoTipoEquipo.Id = boTipoEquipo.Id;
			daoTipoEquipo.Nombre = boTipoEquipo.Nombre;
			List<DAOTipoEquipo> daoTipoEquipoCollection = DAOTipoEquipo.SelectAllBySearchFields(daoTipoEquipo);
			
			foreach(DAOTipoEquipo resdaoTipoEquipo in daoTipoEquipoCollection)
				boTipoEquipoCollection.Add(new BOTipoEquipo(resdaoTipoEquipo));
			
			return boTipoEquipoCollection;
			
		}
		
		
		public static Int32 TipoEquipoCollectionFromSearchFieldsCount(BOTipoEquipo boTipoEquipo)
		{
			DAOTipoEquipo daoTipoEquipo = new DAOTipoEquipo();
			daoTipoEquipo.Id = boTipoEquipo.Id;
			daoTipoEquipo.Nombre = boTipoEquipo.Nombre;
			Int32 objCount = DAOTipoEquipo.SelectAllBySearchFieldsCount(daoTipoEquipo);
			
			return objCount;
			
		}
		
		#endregion

		#region member properties
		
		public virtual Int16? Id
		{
			get
			{
				 return _id;
			}
			set
			{
				_id = value;
				_isDirty = true;
			}
		}
		
		public virtual string Nombre
		{
			get
			{
				 return _nombre;
			}
			set
			{
				_nombre = value;
				_isDirty = true;
			}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
