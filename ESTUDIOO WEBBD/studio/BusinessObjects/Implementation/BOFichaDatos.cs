/*************************************************************
** Class generated by CodeTrigger, Version 4.3.0.6
** CodeTrigger is an Exotechnic Corporation (UK) Ltd Product 
** This class was generated on 08/06/2014 17:05:12
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using studio.DataObjects;

namespace studio.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOFichaDatos.
	///</Summary>
	public partial class BOFichaDatos : DATACONN0_BaseBusiness
	{
		#region member variables
		protected Int16? _id;
		protected Int32? _idEven;
		protected string _descripcion;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOFichaDatos()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int16 id, Int32 idEven
		///</parameters>
		public BOFichaDatos(Int16 id, Int32 idEven)
		{
			try
			{
				DAOFichaDatos daoFichaDatos = DAOFichaDatos.SelectOne(id, idEven);
				_id = daoFichaDatos.Id;
				_idEven = daoFichaDatos.IdEven;
				_descripcion = daoFichaDatos.Descripcion;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOFichaDatos
		///</parameters>
		protected internal BOFichaDatos(DAOFichaDatos daoFichaDatos)
		{
			try
			{
				_id = daoFichaDatos.Id;
				_idEven = daoFichaDatos.IdEven;
				_descripcion = daoFichaDatos.Descripcion;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new FichaDatos record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOFichaDatos daoFichaDatos = new DAOFichaDatos();
			RegisterDataObject(daoFichaDatos);
			BeginTransaction("savenewBOFichaDatos");
			try
			{
				daoFichaDatos.Id = _id;
				daoFichaDatos.IdEven = _idEven;
				daoFichaDatos.Descripcion = _descripcion;
				daoFichaDatos.Insert();
				CommitTransaction();
				
				_id = daoFichaDatos.Id;
				_idEven = daoFichaDatos.IdEven;
				_descripcion = daoFichaDatos.Descripcion;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOFichaDatos");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one FichaDatos record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOFichaDatos
		///</parameters>
		public virtual void Update()
		{
			DAOFichaDatos daoFichaDatos = new DAOFichaDatos();
			RegisterDataObject(daoFichaDatos);
			BeginTransaction("updateBOFichaDatos");
			try
			{
				daoFichaDatos.Id = _id;
				daoFichaDatos.IdEven = _idEven;
				daoFichaDatos.Descripcion = _descripcion;
				daoFichaDatos.Update();
				CommitTransaction();
				
				_id = daoFichaDatos.Id;
				_idEven = daoFichaDatos.IdEven;
				_descripcion = daoFichaDatos.Descripcion;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOFichaDatos");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one FichaDatos record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOFichaDatos daoFichaDatos = new DAOFichaDatos();
			RegisterDataObject(daoFichaDatos);
			BeginTransaction("deleteBOFichaDatos");
			try
			{
				daoFichaDatos.Id = _id;
				daoFichaDatos.IdEven = _idEven;
				daoFichaDatos.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOFichaDatos");
				throw;
			}
		}
		
		///<Summary>
		///FichaDatosCollection
		///This method returns the collection of BOFichaDatos objects
		///</Summary>
		///<returns>
		///List[BOFichaDatos]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static List<BOFichaDatos> FichaDatosCollection()
		{
			List<BOFichaDatos> boFichaDatosCollection = new List<BOFichaDatos>();
			List<DAOFichaDatos> daoFichaDatosCollection = DAOFichaDatos.SelectAll();
			
			foreach(DAOFichaDatos daoFichaDatos in daoFichaDatosCollection)
				boFichaDatosCollection.Add(new BOFichaDatos(daoFichaDatos));
			
			 return boFichaDatosCollection;
			
		}
		
		
		///<Summary>
		///FichaDatosCollectionCount
		///This method returns the collection count of BOFichaDatos objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 FichaDatosCollectionCount()
		{
			Int32 objCount = DAOFichaDatos.SelectAllCount();
			return objCount;
			
		}
		
		
		public static List<BOFichaDatos> FichaDatosCollectionFromSearchFields(BOFichaDatos boFichaDatos)
		{
			List<BOFichaDatos> boFichaDatosCollection = new List<BOFichaDatos>();
			DAOFichaDatos daoFichaDatos = new DAOFichaDatos();
			daoFichaDatos.Id = boFichaDatos.Id;
			daoFichaDatos.IdEven = boFichaDatos.IdEven;
			daoFichaDatos.Descripcion = boFichaDatos.Descripcion;
			List<DAOFichaDatos> daoFichaDatosCollection = DAOFichaDatos.SelectAllBySearchFields(daoFichaDatos);
			
			foreach(DAOFichaDatos resdaoFichaDatos in daoFichaDatosCollection)
				boFichaDatosCollection.Add(new BOFichaDatos(resdaoFichaDatos));
			
			return boFichaDatosCollection;
			
		}
		
		
		public static Int32 FichaDatosCollectionFromSearchFieldsCount(BOFichaDatos boFichaDatos)
		{
			DAOFichaDatos daoFichaDatos = new DAOFichaDatos();
			daoFichaDatos.Id = boFichaDatos.Id;
			daoFichaDatos.IdEven = boFichaDatos.IdEven;
			daoFichaDatos.Descripcion = boFichaDatos.Descripcion;
			Int32 objCount = DAOFichaDatos.SelectAllBySearchFieldsCount(daoFichaDatos);
			
			return objCount;
			
		}
		
		#endregion

		#region member properties
		
		public virtual Int16? Id
		{
			get
			{
				 return _id;
			}
			set
			{
				_id = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? IdEven
		{
			get
			{
				 return _idEven;
			}
			set
			{
				_idEven = value;
				_isDirty = true;
			}
		}
		
		public virtual string Descripcion
		{
			get
			{
				 return _descripcion;
			}
			set
			{
				_descripcion = value;
				_isDirty = true;
			}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
