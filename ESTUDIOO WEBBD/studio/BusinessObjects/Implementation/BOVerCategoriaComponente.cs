/*************************************************************
** Class generated by CodeTrigger, Version 4.3.0.6
** CodeTrigger is an Exotechnic Corporation (UK) Ltd Product 
** This class was generated on 08/06/2014 17:05:12
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using studio.DataObjects;

namespace studio.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOVerCategoriaComponente.
	///</Summary>
	public partial class BOVerCategoriaComponente : DATACONN0_BaseBusiness
	{
		#region member variables
		protected Int16? _id;
		protected string _nombre;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOVerCategoriaComponente()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOVerCategoriaComponente
		///</parameters>
		protected internal BOVerCategoriaComponente(DAOVerCategoriaComponente daoVerCategoriaComponente)
		{
			try
			{
				_id = daoVerCategoriaComponente.Id;
				_nombre = daoVerCategoriaComponente.Nombre;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///VerCategoriaComponenteCollection
		///This method returns the collection of BOVerCategoriaComponente objects
		///</Summary>
		///<returns>
		///List[BOVerCategoriaComponente]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static List<BOVerCategoriaComponente> VerCategoriaComponenteCollection()
		{
			List<BOVerCategoriaComponente> boVerCategoriaComponenteCollection = new List<BOVerCategoriaComponente>();
			List<DAOVerCategoriaComponente> daoVerCategoriaComponenteCollection = DAOVerCategoriaComponente.SelectAll();
			
			foreach(DAOVerCategoriaComponente daoVerCategoriaComponente in daoVerCategoriaComponenteCollection)
				boVerCategoriaComponenteCollection.Add(new BOVerCategoriaComponente(daoVerCategoriaComponente));
			
			 return boVerCategoriaComponenteCollection;
			
		}
		
		
		///<Summary>
		///VerCategoriaComponenteCollectionCount
		///This method returns the collection count of BOVerCategoriaComponente objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 VerCategoriaComponenteCollectionCount()
		{
			Int32 objCount = DAOVerCategoriaComponente.SelectAllCount();
			return objCount;
			
		}
		
		
		public static List<BOVerCategoriaComponente> VerCategoriaComponenteCollectionFromSearchFields(BOVerCategoriaComponente boVerCategoriaComponente)
		{
			List<BOVerCategoriaComponente> boVerCategoriaComponenteCollection = new List<BOVerCategoriaComponente>();
			DAOVerCategoriaComponente daoVerCategoriaComponente = new DAOVerCategoriaComponente();
			daoVerCategoriaComponente.Id = boVerCategoriaComponente.Id;
			daoVerCategoriaComponente.Nombre = boVerCategoriaComponente.Nombre;
			List<DAOVerCategoriaComponente> daoVerCategoriaComponenteCollection = DAOVerCategoriaComponente.SelectAllBySearchFields(daoVerCategoriaComponente);
			
			foreach(DAOVerCategoriaComponente resdaoVerCategoriaComponente in daoVerCategoriaComponenteCollection)
				boVerCategoriaComponenteCollection.Add(new BOVerCategoriaComponente(resdaoVerCategoriaComponente));
			
			return boVerCategoriaComponenteCollection;
			
		}
		
		
		public static Int32 VerCategoriaComponenteCollectionFromSearchFieldsCount(BOVerCategoriaComponente boVerCategoriaComponente)
		{
			DAOVerCategoriaComponente daoVerCategoriaComponente = new DAOVerCategoriaComponente();
			daoVerCategoriaComponente.Id = boVerCategoriaComponente.Id;
			daoVerCategoriaComponente.Nombre = boVerCategoriaComponente.Nombre;
			Int32 objCount = DAOVerCategoriaComponente.SelectAllBySearchFieldsCount(daoVerCategoriaComponente);
			
			return objCount;
			
		}
		
		#endregion

		#region member properties
		
		public virtual Int16? Id
		{
			get
			{
				 return _id;
			}
			set
			{
				_id = value;
				_isDirty = true;
			}
		}
		
		public virtual string Nombre
		{
			get
			{
				 return _nombre;
			}
			set
			{
				_nombre = value;
				_isDirty = true;
			}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
