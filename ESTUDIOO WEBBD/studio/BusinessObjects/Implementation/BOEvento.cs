/*************************************************************
** Class generated by CodeTrigger, Version 4.3.0.6
** CodeTrigger is an Exotechnic Corporation (UK) Ltd Product 
** This class was generated on 08/06/2014 17:05:12
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using studio.DataObjects;

namespace studio.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOEvento.
	///</Summary>
	public partial class BOEvento : DATACONN0_BaseBusiness
	{
		#region member variables
		protected Int32? _id;
		protected DateTime? _fecha;
		protected string _descripcion;
		protected TimeSpan? _hora;
		protected Int16? _idTE;
		protected decimal? _latitud;
		protected decimal? _longitud;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOEvento()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 id
		///</parameters>
		public BOEvento(Int32 id)
		{
			try
			{
				DAOEvento daoEvento = DAOEvento.SelectOne(id);
				_id = daoEvento.Id;
				_fecha = daoEvento.Fecha;
				_descripcion = daoEvento.Descripcion;
				_hora = daoEvento.Hora;
				_idTE = daoEvento.IdTE;
				_latitud = daoEvento.Latitud;
				_longitud = daoEvento.Longitud;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOEvento
		///</parameters>
		protected internal BOEvento(DAOEvento daoEvento)
		{
			try
			{
				_id = daoEvento.Id;
				_fecha = daoEvento.Fecha;
				_descripcion = daoEvento.Descripcion;
				_hora = daoEvento.Hora;
				_idTE = daoEvento.IdTE;
				_latitud = daoEvento.Latitud;
				_longitud = daoEvento.Longitud;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new Evento record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOEvento daoEvento = new DAOEvento();
			RegisterDataObject(daoEvento);
			BeginTransaction("savenewBOEvento");
			try
			{
				daoEvento.Id = _id;
				daoEvento.Fecha = _fecha;
				daoEvento.Descripcion = _descripcion;
				daoEvento.Hora = _hora;
				daoEvento.IdTE = _idTE;
				daoEvento.Latitud = _latitud;
				daoEvento.Longitud = _longitud;
				daoEvento.Insert();
				CommitTransaction();
				
				_id = daoEvento.Id;
				_fecha = daoEvento.Fecha;
				_descripcion = daoEvento.Descripcion;
				_hora = daoEvento.Hora;
				_idTE = daoEvento.IdTE;
				_latitud = daoEvento.Latitud;
				_longitud = daoEvento.Longitud;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOEvento");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one Evento record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOEvento
		///</parameters>
		public virtual void Update()
		{
			DAOEvento daoEvento = new DAOEvento();
			RegisterDataObject(daoEvento);
			BeginTransaction("updateBOEvento");
			try
			{
				daoEvento.Id = _id;
				daoEvento.Fecha = _fecha;
				daoEvento.Descripcion = _descripcion;
				daoEvento.Hora = _hora;
				daoEvento.IdTE = _idTE;
				daoEvento.Latitud = _latitud;
				daoEvento.Longitud = _longitud;
				daoEvento.Update();
				CommitTransaction();
				
				_id = daoEvento.Id;
				_fecha = daoEvento.Fecha;
				_descripcion = daoEvento.Descripcion;
				_hora = daoEvento.Hora;
				_idTE = daoEvento.IdTE;
				_latitud = daoEvento.Latitud;
				_longitud = daoEvento.Longitud;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOEvento");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one Evento record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOEvento daoEvento = new DAOEvento();
			RegisterDataObject(daoEvento);
			BeginTransaction("deleteBOEvento");
			try
			{
				daoEvento.Id = _id;
				daoEvento.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOEvento");
				throw;
			}
		}
		
		///<Summary>
		///EventoCollection
		///This method returns the collection of BOEvento objects
		///</Summary>
		///<returns>
		///List[BOEvento]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static List<BOEvento> EventoCollection()
		{
			List<BOEvento> boEventoCollection = new List<BOEvento>();
			List<DAOEvento> daoEventoCollection = DAOEvento.SelectAll();
			
			foreach(DAOEvento daoEvento in daoEventoCollection)
				boEventoCollection.Add(new BOEvento(daoEvento));
			
			 return boEventoCollection;
			
		}
		
		
		///<Summary>
		///EventoCollectionCount
		///This method returns the collection count of BOEvento objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 EventoCollectionCount()
		{
			Int32 objCount = DAOEvento.SelectAllCount();
			return objCount;
			
		}
		
		
		public static List<BOEvento> EventoCollectionFromSearchFields(BOEvento boEvento)
		{
			List<BOEvento> boEventoCollection = new List<BOEvento>();
			DAOEvento daoEvento = new DAOEvento();
			daoEvento.Id = boEvento.Id;
			daoEvento.Fecha = boEvento.Fecha;
			daoEvento.Descripcion = boEvento.Descripcion;
			daoEvento.Hora = boEvento.Hora;
			daoEvento.IdTE = boEvento.IdTE;
			daoEvento.Latitud = boEvento.Latitud;
			daoEvento.Longitud = boEvento.Longitud;
			List<DAOEvento> daoEventoCollection = DAOEvento.SelectAllBySearchFields(daoEvento);
			
			foreach(DAOEvento resdaoEvento in daoEventoCollection)
				boEventoCollection.Add(new BOEvento(resdaoEvento));
			
			return boEventoCollection;
			
		}
		
		
		public static Int32 EventoCollectionFromSearchFieldsCount(BOEvento boEvento)
		{
			DAOEvento daoEvento = new DAOEvento();
			daoEvento.Id = boEvento.Id;
			daoEvento.Fecha = boEvento.Fecha;
			daoEvento.Descripcion = boEvento.Descripcion;
			daoEvento.Hora = boEvento.Hora;
			daoEvento.IdTE = boEvento.IdTE;
			daoEvento.Latitud = boEvento.Latitud;
			daoEvento.Longitud = boEvento.Longitud;
			Int32 objCount = DAOEvento.SelectAllBySearchFieldsCount(daoEvento);
			
			return objCount;
			
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? Id
		{
			get
			{
				 return _id;
			}
			set
			{
				_id = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? Fecha
		{
			get
			{
				 return _fecha;
			}
			set
			{
				_fecha = value;
				_isDirty = true;
			}
		}
		
		public virtual string Descripcion
		{
			get
			{
				 return _descripcion;
			}
			set
			{
				_descripcion = value;
				_isDirty = true;
			}
		}
		
		public virtual TimeSpan? Hora
		{
			get
			{
				 return _hora;
			}
			set
			{
				_hora = value;
				_isDirty = true;
			}
		}
		
		public virtual Int16? IdTE
		{
			get
			{
				 return _idTE;
			}
			set
			{
				_idTE = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? Latitud
		{
			get
			{
				 return _latitud;
			}
			set
			{
				_latitud = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? Longitud
		{
			get
			{
				 return _longitud;
			}
			set
			{
				_longitud = value;
				_isDirty = true;
			}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
