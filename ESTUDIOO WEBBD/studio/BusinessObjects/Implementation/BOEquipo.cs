/*************************************************************
** Class generated by CodeTrigger, Version 4.3.0.6
** CodeTrigger is an Exotechnic Corporation (UK) Ltd Product 
** This class was generated on 08/06/2014 17:05:12
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using studio.DataObjects;

namespace studio.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOEquipo.
	///</Summary>
	public partial class BOEquipo : DATACONN0_BaseBusiness
	{
		#region member variables
		protected Int16? _id;
		protected string _nombre;
		protected string _descripcion;
		protected bool? _disponible;
		protected Int16? _idTE;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOEquipo()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int16 id
		///</parameters>
		public BOEquipo(Int16 id)
		{
			try
			{
				DAOEquipo daoEquipo = DAOEquipo.SelectOne(id);
				_id = daoEquipo.Id;
				_nombre = daoEquipo.Nombre;
				_descripcion = daoEquipo.Descripcion;
				_disponible = daoEquipo.Disponible;
				_idTE = daoEquipo.IdTE;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///Constructor using unique field(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///IdTE
		///</parameters>
		public BOEquipo(string nombre, Int16 idTE)
		{
			try
			{
				DAOEquipo daoEquipo = DAOEquipo.SelectOneByUniqueFields(nombre, idTE);
				_id = daoEquipo.Id;
				_nombre = daoEquipo.Nombre;
				_descripcion = daoEquipo.Descripcion;
				_disponible = daoEquipo.Disponible;
				_idTE = daoEquipo.IdTE;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOEquipo
		///</parameters>
		protected internal BOEquipo(DAOEquipo daoEquipo)
		{
			try
			{
				_id = daoEquipo.Id;
				_nombre = daoEquipo.Nombre;
				_descripcion = daoEquipo.Descripcion;
				_disponible = daoEquipo.Disponible;
				_idTE = daoEquipo.IdTE;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new Equipo record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOEquipo daoEquipo = new DAOEquipo();
			RegisterDataObject(daoEquipo);
			BeginTransaction("savenewBOEquipo");
			try
			{
				daoEquipo.Nombre = _nombre;
				daoEquipo.Descripcion = _descripcion;
				daoEquipo.Disponible = _disponible;
				daoEquipo.IdTE = _idTE;
				daoEquipo.Insert();
				CommitTransaction();
				
				_id = daoEquipo.Id;
				_nombre = daoEquipo.Nombre;
				_descripcion = daoEquipo.Descripcion;
				_disponible = daoEquipo.Disponible;
				_idTE = daoEquipo.IdTE;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOEquipo");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one Equipo record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOEquipo
		///</parameters>
		public virtual void Update()
		{
			DAOEquipo daoEquipo = new DAOEquipo();
			RegisterDataObject(daoEquipo);
			BeginTransaction("updateBOEquipo");
			try
			{
				daoEquipo.Id = _id;
				daoEquipo.Nombre = _nombre;
				daoEquipo.Descripcion = _descripcion;
				daoEquipo.Disponible = _disponible;
				daoEquipo.IdTE = _idTE;
				daoEquipo.Update();
				CommitTransaction();
				
				_id = daoEquipo.Id;
				_nombre = daoEquipo.Nombre;
				_descripcion = daoEquipo.Descripcion;
				_disponible = daoEquipo.Disponible;
				_idTE = daoEquipo.IdTE;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOEquipo");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one Equipo record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOEquipo daoEquipo = new DAOEquipo();
			RegisterDataObject(daoEquipo);
			BeginTransaction("deleteBOEquipo");
			try
			{
				daoEquipo.Id = _id;
				daoEquipo.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOEquipo");
				throw;
			}
		}
		
		///<Summary>
		///EquipoCollection
		///This method returns the collection of BOEquipo objects
		///</Summary>
		///<returns>
		///List[BOEquipo]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static List<BOEquipo> EquipoCollection()
		{
			List<BOEquipo> boEquipoCollection = new List<BOEquipo>();
			List<DAOEquipo> daoEquipoCollection = DAOEquipo.SelectAll();
			
			foreach(DAOEquipo daoEquipo in daoEquipoCollection)
				boEquipoCollection.Add(new BOEquipo(daoEquipo));
			
			 return boEquipoCollection;
			
		}
		
		
		///<Summary>
		///EquipoCollectionCount
		///This method returns the collection count of BOEquipo objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 EquipoCollectionCount()
		{
			Int32 objCount = DAOEquipo.SelectAllCount();
			return objCount;
			
		}
		
		
		public static List<BOEquipo> EquipoCollectionFromSearchFields(BOEquipo boEquipo)
		{
			List<BOEquipo> boEquipoCollection = new List<BOEquipo>();
			DAOEquipo daoEquipo = new DAOEquipo();
			daoEquipo.Id = boEquipo.Id;
			daoEquipo.Nombre = boEquipo.Nombre;
			daoEquipo.Descripcion = boEquipo.Descripcion;
			daoEquipo.Disponible = boEquipo.Disponible;
			daoEquipo.IdTE = boEquipo.IdTE;
			List<DAOEquipo> daoEquipoCollection = DAOEquipo.SelectAllBySearchFields(daoEquipo);
			
			foreach(DAOEquipo resdaoEquipo in daoEquipoCollection)
				boEquipoCollection.Add(new BOEquipo(resdaoEquipo));
			
			return boEquipoCollection;
			
		}
		
		
		public static Int32 EquipoCollectionFromSearchFieldsCount(BOEquipo boEquipo)
		{
			DAOEquipo daoEquipo = new DAOEquipo();
			daoEquipo.Id = boEquipo.Id;
			daoEquipo.Nombre = boEquipo.Nombre;
			daoEquipo.Descripcion = boEquipo.Descripcion;
			daoEquipo.Disponible = boEquipo.Disponible;
			daoEquipo.IdTE = boEquipo.IdTE;
			Int32 objCount = DAOEquipo.SelectAllBySearchFieldsCount(daoEquipo);
			
			return objCount;
			
		}
		
		#endregion

		#region member properties
		
		public virtual Int16? Id
		{
			get
			{
				 return _id;
			}
			set
			{
				_id = value;
				_isDirty = true;
			}
		}
		
		public virtual string Nombre
		{
			get
			{
				 return _nombre;
			}
			set
			{
				_nombre = value;
				_isDirty = true;
			}
		}
		
		public virtual string Descripcion
		{
			get
			{
				 return _descripcion;
			}
			set
			{
				_descripcion = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? Disponible
		{
			get
			{
				 return _disponible;
			}
			set
			{
				_disponible = value;
				_isDirty = true;
			}
		}
		
		public virtual Int16? IdTE
		{
			get
			{
				 return _idTE;
			}
			set
			{
				_idTE = value;
				_isDirty = true;
			}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
