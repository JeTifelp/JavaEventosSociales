/*************************************************************
** Class generated by CodeTrigger, Version 4.3.0.6
** CodeTrigger is an Exotechnic Corporation (UK) Ltd Product 
** This class was generated on 08/06/2014 17:05:12
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using studio.DataObjects;

namespace studio.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOAgenda.
	///</Summary>
	public partial class BOAgenda : DATACONN0_BaseBusiness
	{
		#region member variables
		protected Int32? _id;
		protected Int32? _idRes;
		protected Int32? _idEven;
		protected DateTime? _fecha;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOAgenda()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 id
		///</parameters>
		public BOAgenda(Int32 id)
		{
			try
			{
				DAOAgenda daoAgenda = DAOAgenda.SelectOne(id);
				_id = daoAgenda.Id;
				_idRes = daoAgenda.IdRes;
				_idEven = daoAgenda.IdEven;
				_fecha = daoAgenda.Fecha;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOAgenda
		///</parameters>
		protected internal BOAgenda(DAOAgenda daoAgenda)
		{
			try
			{
				_id = daoAgenda.Id;
				_idRes = daoAgenda.IdRes;
				_idEven = daoAgenda.IdEven;
				_fecha = daoAgenda.Fecha;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new Agenda record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOAgenda daoAgenda = new DAOAgenda();
			RegisterDataObject(daoAgenda);
			BeginTransaction("savenewBOAgenda");
			try
			{
				daoAgenda.IdRes = _idRes;
				daoAgenda.IdEven = _idEven;
				daoAgenda.Fecha = _fecha;
				daoAgenda.Insert();
				CommitTransaction();
				
				_id = daoAgenda.Id;
				_idRes = daoAgenda.IdRes;
				_idEven = daoAgenda.IdEven;
				_fecha = daoAgenda.Fecha;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOAgenda");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one Agenda record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOAgenda
		///</parameters>
		public virtual void Update()
		{
			DAOAgenda daoAgenda = new DAOAgenda();
			RegisterDataObject(daoAgenda);
			BeginTransaction("updateBOAgenda");
			try
			{
				daoAgenda.Id = _id;
				daoAgenda.IdRes = _idRes;
				daoAgenda.IdEven = _idEven;
				daoAgenda.Fecha = _fecha;
				daoAgenda.Update();
				CommitTransaction();
				
				_id = daoAgenda.Id;
				_idRes = daoAgenda.IdRes;
				_idEven = daoAgenda.IdEven;
				_fecha = daoAgenda.Fecha;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOAgenda");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one Agenda record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOAgenda daoAgenda = new DAOAgenda();
			RegisterDataObject(daoAgenda);
			BeginTransaction("deleteBOAgenda");
			try
			{
				daoAgenda.Id = _id;
				daoAgenda.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOAgenda");
				throw;
			}
		}
		
		///<Summary>
		///AgendaCollection
		///This method returns the collection of BOAgenda objects
		///</Summary>
		///<returns>
		///List[BOAgenda]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static List<BOAgenda> AgendaCollection()
		{
			List<BOAgenda> boAgendaCollection = new List<BOAgenda>();
			List<DAOAgenda> daoAgendaCollection = DAOAgenda.SelectAll();
			
			foreach(DAOAgenda daoAgenda in daoAgendaCollection)
				boAgendaCollection.Add(new BOAgenda(daoAgenda));
			
			 return boAgendaCollection;
			
		}
		
		
		///<Summary>
		///AgendaCollectionCount
		///This method returns the collection count of BOAgenda objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 AgendaCollectionCount()
		{
			Int32 objCount = DAOAgenda.SelectAllCount();
			return objCount;
			
		}
		
		
		public static List<BOAgenda> AgendaCollectionFromSearchFields(BOAgenda boAgenda)
		{
			List<BOAgenda> boAgendaCollection = new List<BOAgenda>();
			DAOAgenda daoAgenda = new DAOAgenda();
			daoAgenda.Id = boAgenda.Id;
			daoAgenda.IdRes = boAgenda.IdRes;
			daoAgenda.IdEven = boAgenda.IdEven;
			daoAgenda.Fecha = boAgenda.Fecha;
			List<DAOAgenda> daoAgendaCollection = DAOAgenda.SelectAllBySearchFields(daoAgenda);
			
			foreach(DAOAgenda resdaoAgenda in daoAgendaCollection)
				boAgendaCollection.Add(new BOAgenda(resdaoAgenda));
			
			return boAgendaCollection;
			
		}
		
		
		public static Int32 AgendaCollectionFromSearchFieldsCount(BOAgenda boAgenda)
		{
			DAOAgenda daoAgenda = new DAOAgenda();
			daoAgenda.Id = boAgenda.Id;
			daoAgenda.IdRes = boAgenda.IdRes;
			daoAgenda.IdEven = boAgenda.IdEven;
			daoAgenda.Fecha = boAgenda.Fecha;
			Int32 objCount = DAOAgenda.SelectAllBySearchFieldsCount(daoAgenda);
			
			return objCount;
			
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? Id
		{
			get
			{
				 return _id;
			}
			set
			{
				_id = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? IdRes
		{
			get
			{
				 return _idRes;
			}
			set
			{
				_idRes = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? IdEven
		{
			get
			{
				 return _idEven;
			}
			set
			{
				_idEven = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? Fecha
		{
			get
			{
				 return _fecha;
			}
			set
			{
				_fecha = value;
				_isDirty = true;
			}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
