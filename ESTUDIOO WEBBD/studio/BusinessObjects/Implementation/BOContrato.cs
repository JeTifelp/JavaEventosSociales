/*************************************************************
** Class generated by CodeTrigger, Version 4.3.0.6
** CodeTrigger is an Exotechnic Corporation (UK) Ltd Product 
** This class was generated on 08/06/2014 17:05:12
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using studio.DataObjects;

namespace studio.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOContrato.
	///</Summary>
	public partial class BOContrato : DATACONN0_BaseBusiness
	{
		#region member variables
		protected Int32? _id;
		protected decimal? _costoTotal;
		protected decimal? _aCuenta;
		protected decimal? _saldo;
		protected DateTime? _fechaCont;
		protected string _obs;
		protected string _cie;
		protected string _cic;
		protected Int32? _idPaq;
		protected Int32? _idEven;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOContrato()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 id
		///</parameters>
		public BOContrato(Int32 id)
		{
			try
			{
				DAOContrato daoContrato = DAOContrato.SelectOne(id);
				_id = daoContrato.Id;
				_costoTotal = daoContrato.CostoTotal;
				_aCuenta = daoContrato.ACuenta;
				_saldo = daoContrato.Saldo;
				_fechaCont = daoContrato.FechaCont;
				_obs = daoContrato.Obs;
				_cie = daoContrato.Cie;
				_cic = daoContrato.Cic;
				_idPaq = daoContrato.IdPaq;
				_idEven = daoContrato.IdEven;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOContrato
		///</parameters>
		protected internal BOContrato(DAOContrato daoContrato)
		{
			try
			{
				_id = daoContrato.Id;
				_costoTotal = daoContrato.CostoTotal;
				_aCuenta = daoContrato.ACuenta;
				_saldo = daoContrato.Saldo;
				_fechaCont = daoContrato.FechaCont;
				_obs = daoContrato.Obs;
				_cie = daoContrato.Cie;
				_cic = daoContrato.Cic;
				_idPaq = daoContrato.IdPaq;
				_idEven = daoContrato.IdEven;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new Contrato record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOContrato daoContrato = new DAOContrato();
			RegisterDataObject(daoContrato);
			BeginTransaction("savenewBOContrato");
			try
			{
				daoContrato.Id = _id;
				daoContrato.CostoTotal = _costoTotal;
				daoContrato.ACuenta = _aCuenta;
				daoContrato.Saldo = _saldo;
				daoContrato.FechaCont = _fechaCont;
				daoContrato.Obs = _obs;
				daoContrato.Cie = _cie;
				daoContrato.Cic = _cic;
				daoContrato.IdPaq = _idPaq;
				daoContrato.IdEven = _idEven;
				daoContrato.Insert();
				CommitTransaction();
				
				_id = daoContrato.Id;
				_costoTotal = daoContrato.CostoTotal;
				_aCuenta = daoContrato.ACuenta;
				_saldo = daoContrato.Saldo;
				_fechaCont = daoContrato.FechaCont;
				_obs = daoContrato.Obs;
				_cie = daoContrato.Cie;
				_cic = daoContrato.Cic;
				_idPaq = daoContrato.IdPaq;
				_idEven = daoContrato.IdEven;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOContrato");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one Contrato record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOContrato
		///</parameters>
		public virtual void Update()
		{
			DAOContrato daoContrato = new DAOContrato();
			RegisterDataObject(daoContrato);
			BeginTransaction("updateBOContrato");
			try
			{
				daoContrato.Id = _id;
				daoContrato.CostoTotal = _costoTotal;
				daoContrato.ACuenta = _aCuenta;
				daoContrato.Saldo = _saldo;
				daoContrato.FechaCont = _fechaCont;
				daoContrato.Obs = _obs;
				daoContrato.Cie = _cie;
				daoContrato.Cic = _cic;
				daoContrato.IdPaq = _idPaq;
				daoContrato.IdEven = _idEven;
				daoContrato.Update();
				CommitTransaction();
				
				_id = daoContrato.Id;
				_costoTotal = daoContrato.CostoTotal;
				_aCuenta = daoContrato.ACuenta;
				_saldo = daoContrato.Saldo;
				_fechaCont = daoContrato.FechaCont;
				_obs = daoContrato.Obs;
				_cie = daoContrato.Cie;
				_cic = daoContrato.Cic;
				_idPaq = daoContrato.IdPaq;
				_idEven = daoContrato.IdEven;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOContrato");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one Contrato record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOContrato daoContrato = new DAOContrato();
			RegisterDataObject(daoContrato);
			BeginTransaction("deleteBOContrato");
			try
			{
				daoContrato.Id = _id;
				daoContrato.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOContrato");
				throw;
			}
		}
		
		///<Summary>
		///ContratoCollection
		///This method returns the collection of BOContrato objects
		///</Summary>
		///<returns>
		///List[BOContrato]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static List<BOContrato> ContratoCollection()
		{
			List<BOContrato> boContratoCollection = new List<BOContrato>();
			List<DAOContrato> daoContratoCollection = DAOContrato.SelectAll();
			
			foreach(DAOContrato daoContrato in daoContratoCollection)
				boContratoCollection.Add(new BOContrato(daoContrato));
			
			 return boContratoCollection;
			
		}
		
		
		///<Summary>
		///ContratoCollectionCount
		///This method returns the collection count of BOContrato objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 ContratoCollectionCount()
		{
			Int32 objCount = DAOContrato.SelectAllCount();
			return objCount;
			
		}
		
		
		public static List<BOContrato> ContratoCollectionFromSearchFields(BOContrato boContrato)
		{
			List<BOContrato> boContratoCollection = new List<BOContrato>();
			DAOContrato daoContrato = new DAOContrato();
			daoContrato.Id = boContrato.Id;
			daoContrato.CostoTotal = boContrato.CostoTotal;
			daoContrato.ACuenta = boContrato.ACuenta;
			daoContrato.Saldo = boContrato.Saldo;
			daoContrato.FechaCont = boContrato.FechaCont;
			daoContrato.Obs = boContrato.Obs;
			daoContrato.Cie = boContrato.Cie;
			daoContrato.Cic = boContrato.Cic;
			daoContrato.IdPaq = boContrato.IdPaq;
			daoContrato.IdEven = boContrato.IdEven;
			List<DAOContrato> daoContratoCollection = DAOContrato.SelectAllBySearchFields(daoContrato);
			
			foreach(DAOContrato resdaoContrato in daoContratoCollection)
				boContratoCollection.Add(new BOContrato(resdaoContrato));
			
			return boContratoCollection;
			
		}
		
		
		public static Int32 ContratoCollectionFromSearchFieldsCount(BOContrato boContrato)
		{
			DAOContrato daoContrato = new DAOContrato();
			daoContrato.Id = boContrato.Id;
			daoContrato.CostoTotal = boContrato.CostoTotal;
			daoContrato.ACuenta = boContrato.ACuenta;
			daoContrato.Saldo = boContrato.Saldo;
			daoContrato.FechaCont = boContrato.FechaCont;
			daoContrato.Obs = boContrato.Obs;
			daoContrato.Cie = boContrato.Cie;
			daoContrato.Cic = boContrato.Cic;
			daoContrato.IdPaq = boContrato.IdPaq;
			daoContrato.IdEven = boContrato.IdEven;
			Int32 objCount = DAOContrato.SelectAllBySearchFieldsCount(daoContrato);
			
			return objCount;
			
		}
        public static List<BOContrato> avancecontrato(BOContrato boContrato)
        {
            List<BOContrato> boContratoCollection = new List<BOContrato>();
            DAOContrato daoContrato = new DAOContrato();
            daoContrato.Id = boContrato.Id;
            daoContrato.CostoTotal = boContrato.CostoTotal;
            daoContrato.ACuenta = boContrato.ACuenta;
            daoContrato.Saldo = boContrato.Saldo;
            daoContrato.FechaCont = boContrato.FechaCont;
            daoContrato.Obs = boContrato.Obs;
            daoContrato.Cie = boContrato.Cie;
            daoContrato.Cic = boContrato.Cic;
            daoContrato.IdPaq = boContrato.IdPaq;
            daoContrato.IdEven = boContrato.IdEven;
            List<DAOContrato> daoContratoCollection = DAOContrato.SelectAllavancecontrato(daoContrato.Cic);

            foreach (DAOContrato resdaoContrato in daoContratoCollection)
                boContratoCollection.Add(new BOContrato(resdaoContrato));

            return boContratoCollection;

        }
		
		#endregion

		#region member properties
		
		public virtual Int32? Id
		{
			get
			{
				 return _id;
			}
			set
			{
				_id = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? CostoTotal
		{
			get
			{
				 return _costoTotal;
			}
			set
			{
				_costoTotal = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? ACuenta
		{
			get
			{
				 return _aCuenta;
			}
			set
			{
				_aCuenta = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? Saldo
		{
			get
			{
				 return _saldo;
			}
			set
			{
				_saldo = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? FechaCont
		{
			get
			{
				 return _fechaCont;
			}
			set
			{
				_fechaCont = value;
				_isDirty = true;
			}
		}
		
		public virtual string Obs
		{
			get
			{
				 return _obs;
			}
			set
			{
				_obs = value;
				_isDirty = true;
			}
		}
		
		public virtual string Cie
		{
			get
			{
				 return _cie;
			}
			set
			{
				_cie = value;
				_isDirty = true;
			}
		}
		
		public virtual string Cic
		{
			get
			{
				 return _cic;
			}
			set
			{
				_cic = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? IdPaq
		{
			get
			{
				 return _idPaq;
			}
			set
			{
				_idPaq = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? IdEven
		{
			get
			{
				 return _idEven;
			}
			set
			{
				_idEven = value;
				_isDirty = true;
			}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
