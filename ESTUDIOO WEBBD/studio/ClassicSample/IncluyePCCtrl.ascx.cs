/*************************************************************
** Class generated by CodeTrigger, Version 4.3.0.6
** CodeTrigger is an Exotechnic Corporation (UK) Ltd Product 
** This class was generated on 08/06/2014 17:05:12
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using studio.BusinessObjects;

namespace studio.ClassicSample
{
	public partial class IncluyePCCtrl : System.Web.UI.UserControl
	{
		/*This class contains basic sample UI code, to illustrate usage of the CodeTrigger generated domain objects. Replace this UI layer with your own code*/
		/*WARNING - This class was generated by CodeTrigger. Changes to this file may cause incorrect behaviour and will be lost when the code is regenerated*/
		private int _maxResultsCheck = 750;
		protected void Page_Load(object sender, EventArgs e)
		{
			ClearUserMessage();
		}

		protected override void OnInit(EventArgs e)
		{
			resultsBtn.Click += new EventHandler(resultsBtn_Click);
			gridView1.PageIndexChanging += new GridViewPageEventHandler(gridView1_PageIndexChanging);
			gridView1.RowDataBound += new GridViewRowEventHandler(gridView1_RowDataBound);
			gridView1.RowUpdating += new GridViewUpdateEventHandler(gridView1_RowUpdating);
			gridView1.RowDeleting += new GridViewDeleteEventHandler(gridView1_RowDeleting);
			gridView1.RowEditing += new GridViewEditEventHandler(gridView1_RowEditing);
			gridView1.RowCancelingEdit += new GridViewCancelEditEventHandler(gridView1_RowCancelingEdit);
			gridView1.RowCommand += new GridViewCommandEventHandler(gridView1_RowCommand);
		}

		void gridView1_RowDataBound(object sender, GridViewRowEventArgs e)
		{
			if (e.Row.RowType == DataControlRowType.DataRow)
			{
				DropDownList ddlIdPaq = ((DropDownList) e.Row.FindControl("IdPaqDropDownList"));
				ddlIdPaq.DataSource = StaticBindings.StaticBindings.GetPaqueteList();
				ddlIdPaq.DataBind();
				ddlIdPaq.SelectedIndex = ((BOIncluyePC)(e.Row.DataItem)).IdPaq == null ? -1 : ddlIdPaq.Items.IndexOf(ddlIdPaq.Items.FindByValue(((BOIncluyePC)(e.Row.DataItem)).IdPaq.ToString()));
				DropDownList ddlIdCP = ((DropDownList) e.Row.FindControl("IdCPDropDownList"));
				ddlIdCP.DataSource = StaticBindings.StaticBindings.GetComponentePaqueteList();
				ddlIdCP.DataBind();
				ddlIdCP.SelectedIndex = ((BOIncluyePC)(e.Row.DataItem)).IdCP == null ? -1 : ddlIdCP.Items.IndexOf(ddlIdCP.Items.FindByValue(((BOIncluyePC)(e.Row.DataItem)).IdCP.ToString()));
			}
			else if (e.Row.RowType == DataControlRowType.Footer)
			{
				DropDownList ddlIdPaq = ((DropDownList) e.Row.FindControl("IdPaqDropDownList"));
				ddlIdPaq.DataSource = StaticBindings.StaticBindings.GetPaqueteList();
				ddlIdPaq.DataBind();
				ddlIdPaq.SelectedIndex = -1;
				DropDownList ddlIdCP = ((DropDownList) e.Row.FindControl("IdCPDropDownList"));
				ddlIdCP.DataSource = StaticBindings.StaticBindings.GetComponentePaqueteList();
				ddlIdCP.DataBind();
				ddlIdCP.SelectedIndex = -1;
			}
		}

		private void BindEmptyRow()
		{
			List<BOIncluyePC> boIncluyePCs = new List<BOIncluyePC>() { new BOIncluyePC() };
			gridView1.DataSource = boIncluyePCs;
			gridView1.DataBind();
			
			gridView1.Rows[0].Visible = false;
			gridView1.Rows[0].Controls.Clear();
		}

		public int LoadRecords(bool checkCount)
		{
			BOIncluyePC searchBO = new BOIncluyePC();
			try
			{
				if(!string.IsNullOrEmpty(IdPaqSchTxtBx.Text)) searchBO.IdPaq = Int32.Parse(IdPaqSchTxtBx.Text);
				if(!string.IsNullOrEmpty(IdCPSchTxtBx.Text)) searchBO.IdCP = Int16.Parse(IdCPSchTxtBx.Text);
				if(!string.IsNullOrEmpty(CantidadSchTxtBx.Text)) searchBO.Cantidad = Int16.Parse(CantidadSchTxtBx.Text);
			}
			catch(Exception ex)
			{ SetUserMessage("CodeTrigger has detected a parsing error. <br>Possible invalid input format in search fields. Exception details below.<br>" + ex.Message); return -1; }
			
			try
			{
				List<BOIncluyePC> boIncluyePCs = null;
				int resultCount = BOIncluyePC.IncluyePCCollectionFromSearchFieldsCount(searchBO);
				if(checkCount && (resultCount > _maxResultsCheck))
				{
					SetUserMessage("Your current filter settings will return " + resultCount.ToString() + " records. <br>Please adjust your filter settings or increase your max search results limit(750).<br>Data has not been refreshed. ");
					BindEmptyRow();
					return -1;
				}
			
				boIncluyePCs = BOIncluyePC.IncluyePCCollectionFromSearchFields(searchBO);
				if(boIncluyePCs.Count == 0)
				{ BindEmptyRow(); return 0; }
				
				Session["_boIncluyePCs"] = boIncluyePCs;
				gridView1.DataSource = boIncluyePCs;
				gridView1.DataBind();
				return boIncluyePCs.Count;
			}
			catch(Exception ex)
			{ SetUserMessage("CodeTrigger has detected an error while loading records from data store. Detailed error message below:<br>" + ex.Message); return -1; }
			finally	{	}
		}

		private void resultsBtn_Click(object sender, EventArgs e)
		{
			int count = LoadRecords(true);
			if(count > -1) SetUserMessage(count.ToString() + " record(s) loaded from data store");
		}

		protected void gridView1_RowEditing(object sender, GridViewEditEventArgs e)
		{
			gridView1.EditIndex = e.NewEditIndex;
			List<BOIncluyePC> boIncluyePCs = (List<BOIncluyePC>)Session["_boIncluyePCs"];
			gridView1.DataSource = boIncluyePCs;
			gridView1.DataBind();
		}
		
		protected void gridView1_RowUpdating(object sender, GridViewUpdateEventArgs e)
		{
			List<BOIncluyePC> _boIncluyePCs = (List<BOIncluyePC>)Session["_boIncluyePCs"];
			BOIncluyePC boIncluyePC = _boIncluyePCs[e.RowIndex];
			try
			{
				TextBox txtbxCantidad = (TextBox)gridView1.Rows[e.RowIndex].FindControl("CantidadGridTxtBx");
				boIncluyePC.Cantidad = string.IsNullOrEmpty(txtbxCantidad.Text) ? (Int16?)null : Int16.Parse(txtbxCantidad.Text);
			}
			catch(Exception ex)
			{ SetUserMessage("CodeTrigger has detected an error while parsing user input. Possible invalid data format. Detailed error message below:<br>" + ex.Message);  return; }
			
			try{ boIncluyePC.Update(); }
			catch(Exception ex)
			{ SetUserMessage("CodeTrigger has detected an error while parsing user input. Possible invalid data format. Detailed error message below:<br>" + ex.Message);  return; }
			finally	{	}
			
			gridView1.EditIndex = -1;
			LoadRecords(false);
			SetUserMessage("Record updated");
		}
		
		protected void gridView1_RowDeleting(object sender, GridViewDeleteEventArgs e)
		{
			List<BOIncluyePC> _boIncluyePCs = (List<BOIncluyePC>)Session["_boIncluyePCs"];
			BOIncluyePC boIncluyePC = _boIncluyePCs[(gridView1.PageIndex*gridView1.PageSize)+e.RowIndex];
		
			try{ boIncluyePC.Delete(); }
			catch(Exception ex)
			{ SetUserMessage("CodeTrigger has detected an error while deleting record. Possible foreign key issue. Detailed error message below:<br>" + ex.Message); return; }
			finally	{	}
			
			LoadRecords(false);
			SetUserMessage("Record deleted");
		}
		
		protected void gridView1_RowCommand(object sender, GridViewCommandEventArgs e)
		{
			if(e.CommandName.Equals("Insert"))
			{
				BOIncluyePC boIncluyePC = new BOIncluyePC();
				try
				{
					DropDownList ddlIdPaq = (DropDownList)gridView1.FooterRow.FindControl("IdPaqDropDownList");
					if(!string.IsNullOrEmpty(ddlIdPaq.SelectedValue)) boIncluyePC.IdPaq = Int32.Parse(ddlIdPaq.SelectedValue);
					DropDownList ddlIdCP = (DropDownList)gridView1.FooterRow.FindControl("IdCPDropDownList");
					if(!string.IsNullOrEmpty(ddlIdCP.SelectedValue)) boIncluyePC.IdCP = Int16.Parse(ddlIdCP.SelectedValue);
					TextBox txtbxCantidad = (TextBox)gridView1.FooterRow.FindControl("CantidadGridNewTxtBx");
					if(!string.IsNullOrEmpty(txtbxCantidad.Text)) boIncluyePC.Cantidad = Int16.Parse(txtbxCantidad.Text);
				}
				catch(Exception ex)
				{ LoadRecords(false);  SetUserMessage("CodeTrigger has detected an error while parsing user input. Possible invalid data format. Detailed error message below:<br>" + ex.Message); return; }
				
				try{ boIncluyePC.SaveNew(); }
				catch(Exception ex)
				{ LoadRecords(false); SetUserMessage("CodeTrigger has detected an error while inserting new record. Possible foreign key violation. Detailed error message below:<br>" + ex.Message); return; }
				finally	{	}
			
				LoadRecords(false);
				SetUserMessage("New record inserted");
			}
		}
			
		protected void gridView1_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
		{
			gridView1.EditIndex = -1;
			LoadRecords(false);
		}

		protected void gridView1_PageIndexChanging(object sender, GridViewPageEventArgs e)
		{
			gridView1.PageIndex = e.NewPageIndex;
			LoadRecords(false);
		}

		private void SetUserMessage(string msg)
		{  ErrorLbl.Text = msg; }

		private void ClearUserMessage()
		{  ErrorLbl.Text = ""; }

	}
}

