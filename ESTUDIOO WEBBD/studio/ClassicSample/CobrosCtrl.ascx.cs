/*************************************************************
** Class generated by CodeTrigger, Version 4.3.0.6
** CodeTrigger is an Exotechnic Corporation (UK) Ltd Product 
** This class was generated on 08/06/2014 17:05:12
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using studio.BusinessObjects;

namespace studio.ClassicSample
{
	public partial class CobrosCtrl : System.Web.UI.UserControl
	{
		/*This class contains basic sample UI code, to illustrate usage of the CodeTrigger generated domain objects. Replace this UI layer with your own code*/
		/*WARNING - This class was generated by CodeTrigger. Changes to this file may cause incorrect behaviour and will be lost when the code is regenerated*/
		private int _maxResultsCheck = 750;
		protected void Page_Load(object sender, EventArgs e)
		{
			ClearUserMessage();
		}

		protected override void OnInit(EventArgs e)
		{
			resultsBtn.Click += new EventHandler(resultsBtn_Click);
			gridView1.PageIndexChanging += new GridViewPageEventHandler(gridView1_PageIndexChanging);
			gridView1.RowDataBound += new GridViewRowEventHandler(gridView1_RowDataBound);
			gridView1.RowUpdating += new GridViewUpdateEventHandler(gridView1_RowUpdating);
			gridView1.RowDeleting += new GridViewDeleteEventHandler(gridView1_RowDeleting);
			gridView1.RowEditing += new GridViewEditEventHandler(gridView1_RowEditing);
			gridView1.RowCancelingEdit += new GridViewCancelEditEventHandler(gridView1_RowCancelingEdit);
			gridView1.RowCommand += new GridViewCommandEventHandler(gridView1_RowCommand);
		}

		void gridView1_RowDataBound(object sender, GridViewRowEventArgs e)
		{
			if (e.Row.RowType == DataControlRowType.DataRow)
			{
				DropDownList ddlIdCont = ((DropDownList) e.Row.FindControl("IdContDropDownList"));
				ddlIdCont.DataSource = StaticBindings.StaticBindings.GetContratoList();
				ddlIdCont.DataBind();
				ddlIdCont.SelectedIndex = ((BOCobros)(e.Row.DataItem)).IdCont == null ? -1 : ddlIdCont.Items.IndexOf(ddlIdCont.Items.FindByValue(((BOCobros)(e.Row.DataItem)).IdCont.ToString()));
				DropDownList ddlCie = ((DropDownList) e.Row.FindControl("CieDropDownList"));
				ddlCie.DataSource = StaticBindings.StaticBindings.GetEmpleadoList();
				ddlCie.DataBind();
				ddlCie.SelectedIndex = ((BOCobros)(e.Row.DataItem)).Cie == null ? -1 : ddlCie.Items.IndexOf(ddlCie.Items.FindByValue(((BOCobros)(e.Row.DataItem)).Cie.ToString()));
			}
			else if (e.Row.RowType == DataControlRowType.Footer)
			{
				DropDownList ddlIdCont = ((DropDownList) e.Row.FindControl("IdContDropDownList"));
				ddlIdCont.DataSource = StaticBindings.StaticBindings.GetContratoList();
				ddlIdCont.DataBind();
				ddlIdCont.SelectedIndex = -1;
				DropDownList ddlCie = ((DropDownList) e.Row.FindControl("CieDropDownList"));
				ddlCie.DataSource = StaticBindings.StaticBindings.GetEmpleadoList();
				ddlCie.DataBind();
				ddlCie.SelectedIndex = -1;
			}
		}

		private void BindEmptyRow()
		{
			List<BOCobros> boCobross = new List<BOCobros>() { new BOCobros() };
			gridView1.DataSource = boCobross;
			gridView1.DataBind();
			
			gridView1.Rows[0].Visible = false;
			gridView1.Rows[0].Controls.Clear();
		}

		public int LoadRecords(bool checkCount)
		{
			BOCobros searchBO = new BOCobros();
			try
			{
				if(!string.IsNullOrEmpty(NroSchTxtBx.Text)) searchBO.Nro = Int32.Parse(NroSchTxtBx.Text);
				if(!string.IsNullOrEmpty(IdContSchTxtBx.Text)) searchBO.IdCont = Int32.Parse(IdContSchTxtBx.Text);
				if(!string.IsNullOrEmpty(NombreApellidoSchTxtBx.Text)) searchBO.NombreApellido = NombreApellidoSchTxtBx.Text;
				if(!string.IsNullOrEmpty(MontoSchTxtBx.Text)) searchBO.Monto = decimal.Parse(MontoSchTxtBx.Text);
				if(!string.IsNullOrEmpty(FechaSchTxtBx.Text)) searchBO.Fecha = DateTime.Parse(FechaSchTxtBx.Text);
				if(!string.IsNullOrEmpty(HoraSchTxtBx.Text)) searchBO.Hora = TimeSpan.Parse(HoraSchTxtBx.Text);
				if(!string.IsNullOrEmpty(CieSchTxtBx.Text)) searchBO.Cie = CieSchTxtBx.Text;
			}
			catch(Exception ex)
			{ SetUserMessage("CodeTrigger has detected a parsing error. <br>Possible invalid input format in search fields. Exception details below.<br>" + ex.Message); return -1; }
			
			try
			{
				List<BOCobros> boCobross = null;
				int resultCount = BOCobros.CobrosCollectionFromSearchFieldsCount(searchBO);
				if(checkCount && (resultCount > _maxResultsCheck))
				{
					SetUserMessage("Your current filter settings will return " + resultCount.ToString() + " records. <br>Please adjust your filter settings or increase your max search results limit(750).<br>Data has not been refreshed. ");
					BindEmptyRow();
					return -1;
				}
			
				boCobross = BOCobros.CobrosCollectionFromSearchFields(searchBO);
				if(boCobross.Count == 0)
				{ BindEmptyRow(); return 0; }
				
				Session["_boCobross"] = boCobross;
				gridView1.DataSource = boCobross;
				gridView1.DataBind();
				return boCobross.Count;
			}
			catch(Exception ex)
			{ SetUserMessage("CodeTrigger has detected an error while loading records from data store. Detailed error message below:<br>" + ex.Message); return -1; }
			finally	{	}
		}

		private void resultsBtn_Click(object sender, EventArgs e)
		{
			int count = LoadRecords(true);
			if(count > -1) SetUserMessage(count.ToString() + " record(s) loaded from data store");
		}

		protected void gridView1_RowEditing(object sender, GridViewEditEventArgs e)
		{
			gridView1.EditIndex = e.NewEditIndex;
			List<BOCobros> boCobross = (List<BOCobros>)Session["_boCobross"];
			gridView1.DataSource = boCobross;
			gridView1.DataBind();
		}
		
		protected void gridView1_RowUpdating(object sender, GridViewUpdateEventArgs e)
		{
			List<BOCobros> _boCobross = (List<BOCobros>)Session["_boCobross"];
			BOCobros boCobros = _boCobross[e.RowIndex];
			try
			{
				DropDownList ddlIdCont = (DropDownList)gridView1.Rows[e.RowIndex].FindControl("IdContDropDownList");
				boCobros.IdCont = string.IsNullOrEmpty(ddlIdCont.SelectedValue) ? (Int32?)null : Int32.Parse(ddlIdCont.SelectedValue);
				TextBox txtbxNombreApellido = (TextBox)gridView1.Rows[e.RowIndex].FindControl("NombreApellidoGridTxtBx");
				boCobros.NombreApellido = string.IsNullOrEmpty(txtbxNombreApellido.Text) ? null : txtbxNombreApellido.Text;
				TextBox txtbxMonto = (TextBox)gridView1.Rows[e.RowIndex].FindControl("MontoGridTxtBx");
				boCobros.Monto = string.IsNullOrEmpty(txtbxMonto.Text) ? (decimal?)null : decimal.Parse(txtbxMonto.Text);
				TextBox txtbxFecha = (TextBox)gridView1.Rows[e.RowIndex].FindControl("FechaGridTxtBx");
				boCobros.Fecha = string.IsNullOrEmpty(txtbxFecha.Text) ? (DateTime?)null : DateTime.Parse(txtbxFecha.Text);
				TextBox txtbxHora = (TextBox)gridView1.Rows[e.RowIndex].FindControl("HoraGridTxtBx");
				boCobros.Hora = string.IsNullOrEmpty(txtbxHora.Text) ? (TimeSpan?)null : TimeSpan.Parse(txtbxHora.Text);
				DropDownList ddlCie = (DropDownList)gridView1.Rows[e.RowIndex].FindControl("CieDropDownList");
				boCobros.Cie = string.IsNullOrEmpty(ddlCie.SelectedValue) ? null : (string)ddlCie.SelectedValue;
			}
			catch(Exception ex)
			{ SetUserMessage("CodeTrigger has detected an error while parsing user input. Possible invalid data format. Detailed error message below:<br>" + ex.Message);  return; }
			
			try{ boCobros.Update(); }
			catch(Exception ex)
			{ SetUserMessage("CodeTrigger has detected an error while parsing user input. Possible invalid data format. Detailed error message below:<br>" + ex.Message);  return; }
			finally	{	}
			
			gridView1.EditIndex = -1;
			LoadRecords(false);
			SetUserMessage("Record updated");
		}
		
		protected void gridView1_RowDeleting(object sender, GridViewDeleteEventArgs e)
		{
			List<BOCobros> _boCobross = (List<BOCobros>)Session["_boCobross"];
			BOCobros boCobros = _boCobross[(gridView1.PageIndex*gridView1.PageSize)+e.RowIndex];
		
			try{ boCobros.Delete(); }
			catch(Exception ex)
			{ SetUserMessage("CodeTrigger has detected an error while deleting record. Possible foreign key issue. Detailed error message below:<br>" + ex.Message); return; }
			finally	{	}
			
			LoadRecords(false);
			SetUserMessage("Record deleted");
		}
		
		protected void gridView1_RowCommand(object sender, GridViewCommandEventArgs e)
		{
			if(e.CommandName.Equals("Insert"))
			{
				BOCobros boCobros = new BOCobros();
				try
				{
					TextBox txtbxNro = (TextBox)gridView1.FooterRow.FindControl("NroGridNewTxtBx");
					if(!string.IsNullOrEmpty(txtbxNro.Text)) boCobros.Nro = Int32.Parse(txtbxNro.Text);
					DropDownList ddlIdCont = (DropDownList)gridView1.FooterRow.FindControl("IdContDropDownList");
					if(!string.IsNullOrEmpty(ddlIdCont.SelectedValue)) boCobros.IdCont = Int32.Parse(ddlIdCont.SelectedValue);
					TextBox txtbxNombreApellido = (TextBox)gridView1.FooterRow.FindControl("NombreApellidoGridNewTxtBx");
					if(!string.IsNullOrEmpty(txtbxNombreApellido.Text)) boCobros.NombreApellido = txtbxNombreApellido.Text;
					TextBox txtbxMonto = (TextBox)gridView1.FooterRow.FindControl("MontoGridNewTxtBx");
					if(!string.IsNullOrEmpty(txtbxMonto.Text)) boCobros.Monto = decimal.Parse(txtbxMonto.Text);
					TextBox txtbxFecha = (TextBox)gridView1.FooterRow.FindControl("FechaGridNewTxtBx");
					if(!string.IsNullOrEmpty(txtbxFecha.Text)) boCobros.Fecha = DateTime.Parse(txtbxFecha.Text);
					TextBox txtbxHora = (TextBox)gridView1.FooterRow.FindControl("HoraGridNewTxtBx");
					if(!string.IsNullOrEmpty(txtbxHora.Text)) boCobros.Hora = TimeSpan.Parse(txtbxHora.Text);
					DropDownList ddlCie = (DropDownList)gridView1.FooterRow.FindControl("CieDropDownList");
					if(!string.IsNullOrEmpty(ddlCie.SelectedValue)) boCobros.Cie = (string)ddlCie.SelectedValue;
				}
				catch(Exception ex)
				{ LoadRecords(false);  SetUserMessage("CodeTrigger has detected an error while parsing user input. Possible invalid data format. Detailed error message below:<br>" + ex.Message); return; }
				
				try{ boCobros.SaveNew(); }
				catch(Exception ex)
				{ LoadRecords(false); SetUserMessage("CodeTrigger has detected an error while inserting new record. Possible foreign key violation. Detailed error message below:<br>" + ex.Message); return; }
				finally	{	}
			
				LoadRecords(false);
				SetUserMessage("New record inserted");
			}
		}
			
		protected void gridView1_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
		{
			gridView1.EditIndex = -1;
			LoadRecords(false);
		}

		protected void gridView1_PageIndexChanging(object sender, GridViewPageEventArgs e)
		{
			gridView1.PageIndex = e.NewPageIndex;
			LoadRecords(false);
		}

		private void SetUserMessage(string msg)
		{  ErrorLbl.Text = msg; }

		private void ClearUserMessage()
		{  ErrorLbl.Text = ""; }

	}
}

