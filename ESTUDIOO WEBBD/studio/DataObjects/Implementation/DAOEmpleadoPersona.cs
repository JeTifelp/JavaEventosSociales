/*************************************************************
** Class generated by CodeTrigger, Version 4.3.0.6
** CodeTrigger is an Exotechnic Corporation (UK) Ltd Product 
** This class was generated on 08/06/2014 17:05:12
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections.Generic;

namespace studio.DataObjects
{
	public partial class DAOEmpleadoPersona : DATACONN0_BaseData
	{
		#region member variables
		protected string _ci;
		protected string _pmn;
		protected bool? _sexo;
		protected string _telefono;
		protected string _nombre;
		#endregion

		#region class methods
		public DAOEmpleadoPersona()
		{
		}
		///<Summary>
		///Select all rows
		///This method returns all data rows in the table EMPLEADO_PERSONA
		///</Summary>
		///<returns>
		///List-DAOEmpleadoPersona.
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static List<DAOEmpleadoPersona> SelectAll()
		{
			SqlCommand	command = new SqlCommand();
			command.CommandText = InlineProcs.ctprEMPLEADO_PERSONA_SelectAll;
			command.CommandType = CommandType.Text;
			SqlConnection staticConnection = StaticSqlConnection;
			command.Connection = staticConnection;

			DataTable dt = new DataTable("EMPLEADO_PERSONA");
			SqlDataAdapter sqlAdapter = new SqlDataAdapter(command);
			try
			{

				staticConnection.Open();
				sqlAdapter.Fill(dt);


				List<DAOEmpleadoPersona> objList = new List<DAOEmpleadoPersona>();
				if(dt.Rows.Count > 0)
				{
					foreach(DataRow row in dt.Rows)
					{
						DAOEmpleadoPersona retObj = new DAOEmpleadoPersona();
						retObj._ci					 = Convert.IsDBNull(row["CI"]) ? null : (string)row["CI"];
						retObj._pmn					 = Convert.IsDBNull(row["PMN"]) ? null : (string)row["PMN"];
						retObj._sexo					 = Convert.IsDBNull(row["Sexo"]) ? (bool?)null : (bool?)row["Sexo"];
						retObj._telefono					 = Convert.IsDBNull(row["Telefono"]) ? null : (string)row["Telefono"];
						retObj._nombre					 = Convert.IsDBNull(row["Nombre"]) ? null : (string)row["Nombre"];
						objList.Add(retObj);
					}
				}
				return objList;
			}
			catch
			{
				throw;
			}
			finally
			{
				staticConnection.Close();
				command.Dispose();
			}
		}

		///<Summary>
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 SelectAllCount()
		{
			SqlCommand	command = new SqlCommand();
			command.CommandText = InlineProcs.ctprEMPLEADO_PERSONA_SelectAllCount;
			command.CommandType = CommandType.Text;
			SqlConnection staticConnection = StaticSqlConnection;
			command.Connection = staticConnection;

			try
			{

				staticConnection.Open();
				Int32 retCount = (Int32)command.ExecuteScalar();

				return retCount;			}
			catch
			{
				throw;
			}
			finally
			{
				staticConnection.Close();
				command.Dispose();
			}
		}

		///<Summary>
		///</Summary>
		///<returns>
		///List-DAOEmpleadoPersona.
		///</returns>
		///<parameters>
		///DAOEmpleadoPersona daoEmpleadoPersona
		///</parameters>
		public static List<DAOEmpleadoPersona> SelectAllBySearchFields(DAOEmpleadoPersona daoEmpleadoPersona)
		{
			SqlCommand	command = new SqlCommand();
			command.CommandText = InlineProcs.ctprEMPLEADO_PERSONA_SelectAllBySearchFields;
			command.CommandType = CommandType.Text;
			SqlConnection staticConnection = StaticSqlConnection;
			command.Connection = staticConnection;

			DataTable dt = new DataTable("EMPLEADO_PERSONA");
			SqlDataAdapter sqlAdapter = new SqlDataAdapter(command);
			try
			{
				command.Parameters.Add(new SqlParameter("@CI", SqlDbType.VarChar, 10, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, (object)daoEmpleadoPersona.Ci?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@PMN", SqlDbType.VarChar, 72, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, (object)daoEmpleadoPersona.Pmn?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Sexo", SqlDbType.Bit, 1, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, (object)daoEmpleadoPersona.Sexo?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Telefono", SqlDbType.VarChar, 15, ParameterDirection.Input, true, 0, 0, "", DataRowVersion.Proposed, (object)daoEmpleadoPersona.Telefono?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Nombre", SqlDbType.VarChar, 30, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, (object)daoEmpleadoPersona.Nombre?? (object)DBNull.Value));

				staticConnection.Open();
				sqlAdapter.Fill(dt);


				List<DAOEmpleadoPersona> objList = new List<DAOEmpleadoPersona>();
				if(dt.Rows.Count > 0)
				{
					foreach(DataRow row in dt.Rows)
					{
						DAOEmpleadoPersona retObj = new DAOEmpleadoPersona();
						retObj._ci					 = Convert.IsDBNull(row["CI"]) ? null : (string)row["CI"];
						retObj._pmn					 = Convert.IsDBNull(row["PMN"]) ? null : (string)row["PMN"];
						retObj._sexo					 = Convert.IsDBNull(row["Sexo"]) ? (bool?)null : (bool?)row["Sexo"];
						retObj._telefono					 = Convert.IsDBNull(row["Telefono"]) ? null : (string)row["Telefono"];
						retObj._nombre					 = Convert.IsDBNull(row["Nombre"]) ? null : (string)row["Nombre"];
						objList.Add(retObj);
					}
				}
				return objList;
			}
			catch
			{
				throw;
			}
			finally
			{
				staticConnection.Close();
				command.Dispose();
			}
		}

		///<Summary>
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///DAOEmpleadoPersona daoEmpleadoPersona
		///</parameters>
		public static Int32 SelectAllBySearchFieldsCount(DAOEmpleadoPersona daoEmpleadoPersona)
		{
			SqlCommand	command = new SqlCommand();
			command.CommandText = InlineProcs.ctprEMPLEADO_PERSONA_SelectAllBySearchFieldsCount;
			command.CommandType = CommandType.Text;
			SqlConnection staticConnection = StaticSqlConnection;
			command.Connection = staticConnection;

			try
			{
				command.Parameters.Add(new SqlParameter("@CI", SqlDbType.VarChar, 10, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, (object)daoEmpleadoPersona.Ci?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@PMN", SqlDbType.VarChar, 72, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, (object)daoEmpleadoPersona.Pmn?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Sexo", SqlDbType.Bit, 1, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, (object)daoEmpleadoPersona.Sexo?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Telefono", SqlDbType.VarChar, 15, ParameterDirection.Input, true, 0, 0, "", DataRowVersion.Proposed, (object)daoEmpleadoPersona.Telefono?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Nombre", SqlDbType.VarChar, 30, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, (object)daoEmpleadoPersona.Nombre?? (object)DBNull.Value));

				staticConnection.Open();
				Int32 retCount = (Int32)command.ExecuteScalar();

				return retCount;			}
			catch
			{
				throw;
			}
			finally
			{
				staticConnection.Close();
				command.Dispose();
			}
		}

		#endregion

		#region member properties

		public string Ci
		{
			get
			{
				return _ci;
			}
			set
			{
				_ci = value;
			}
		}

		public string Pmn
		{
			get
			{
				return _pmn;
			}
			set
			{
				_pmn = value;
			}
		}

		public bool? Sexo
		{
			get
			{
				return _sexo;
			}
			set
			{
				_sexo = value;
			}
		}

		public string Telefono
		{
			get
			{
				return _telefono;
			}
			set
			{
				_telefono = value;
			}
		}

		public string Nombre
		{
			get
			{
				return _nombre;
			}
			set
			{
				_nombre = value;
			}
		}

		#endregion
	}
}

#region inline sql procs
namespace studio.DataObjects
{
	public partial class InlineProcs
	{
		internal static string ctprEMPLEADO_PERSONA_SelectAll = @"
			-- Select All rows
			-- selects all rows from the table
			SELECT 
			[CI]
			,[PMN]
			,[Sexo]
			,[Telefono]
			,[Nombre]
			FROM [dbo].[EMPLEADO_PERSONA]
			";

		internal static string ctprEMPLEADO_PERSONA_SelectAllCount = @"
			
			-- selects count of all rows from the table
			SELECT COUNT(*)
			FROM [dbo].[EMPLEADO_PERSONA]
			";

		internal static string ctprEMPLEADO_PERSONA_SelectAllBySearchFields = @"
			
			-- selects all rows from the table according to search criteria
			SELECT 
			[CI],
			[PMN],
			[Sexo],
			[Telefono],
			[Nombre]
			FROM [dbo].[EMPLEADO_PERSONA]
			WHERE 
			([CI] LIKE @CI OR @CI is null)
			AND ([PMN] LIKE @PMN OR @PMN is null)
			AND ([Sexo] LIKE @Sexo OR @Sexo is null)
			AND ([Telefono] LIKE @Telefono OR @Telefono is null)
			AND ([Nombre] LIKE @Nombre OR @Nombre is null)
			";

		internal static string ctprEMPLEADO_PERSONA_SelectAllBySearchFieldsCount = @"
			-- Get count of rows returnable by this query
			-- selects count of all rows from the table according to search criteria
			SELECT COUNT(*)
			FROM [dbo].[EMPLEADO_PERSONA]
			WHERE 
			([CI] LIKE @CI OR @CI is null)
			AND ([PMN] LIKE @PMN OR @PMN is null)
			AND ([Sexo] LIKE @Sexo OR @Sexo is null)
			AND ([Telefono] LIKE @Telefono OR @Telefono is null)
			AND ([Nombre] LIKE @Nombre OR @Nombre is null)
			";

	}
}
#endregion
