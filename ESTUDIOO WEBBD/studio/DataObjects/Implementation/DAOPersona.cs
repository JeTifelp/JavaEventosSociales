/*************************************************************
** Class generated by CodeTrigger, Version 4.3.0.6
** CodeTrigger is an Exotechnic Corporation (UK) Ltd Product 
** This class was generated on 08/06/2014 17:05:12
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections.Generic;

namespace studio.DataObjects
{
	public partial class DAOPersona : DATACONN0_BaseData
	{
		#region member variables
		protected string _ci;
		protected string _nombre;
		protected string _aPellidoP;
		protected string _aPellidoM;
		protected string _direccion;
		protected bool? _sexo;
		protected string _telefono;
		protected string _email;
		#endregion

		#region class methods
		public DAOPersona()
		{
		}
		///<Summary>
		///Select one row by primary key(s)
		///This method returns one row from the table Persona based on the primary key(s)
		///</Summary>
		///<returns>
		///DAOPersona
		///</returns>
		///<parameters>
		///string ci
		///</parameters>
		public static DAOPersona SelectOne(string ci)
		{
			SqlCommand	command = new SqlCommand();
			command.CommandText = InlineProcs.ctprPersona_SelectOne;
			command.CommandType = CommandType.Text;
			SqlConnection staticConnection = StaticSqlConnection;
			command.Connection = staticConnection;

			DataTable dt = new DataTable("Persona");
			SqlDataAdapter sqlAdapter = new SqlDataAdapter(command);
			try
			{
				command.Parameters.Add(new SqlParameter("@CI", SqlDbType.VarChar, 10, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, (object)ci?? (object)DBNull.Value));

				staticConnection.Open();
				sqlAdapter.Fill(dt);


				DAOPersona retObj = null;
				if(dt.Rows.Count > 0)
				{
					retObj = new DAOPersona();
					retObj._ci					 = Convert.IsDBNull(dt.Rows[0]["CI"]) ? null : (string)dt.Rows[0]["CI"];
					retObj._nombre					 = Convert.IsDBNull(dt.Rows[0]["Nombre"]) ? null : (string)dt.Rows[0]["Nombre"];
					retObj._aPellidoP					 = Convert.IsDBNull(dt.Rows[0]["APellidoP"]) ? null : (string)dt.Rows[0]["APellidoP"];
					retObj._aPellidoM					 = Convert.IsDBNull(dt.Rows[0]["APellidoM"]) ? null : (string)dt.Rows[0]["APellidoM"];
					retObj._direccion					 = Convert.IsDBNull(dt.Rows[0]["Direccion"]) ? null : (string)dt.Rows[0]["Direccion"];
					retObj._sexo					 = Convert.IsDBNull(dt.Rows[0]["Sexo"]) ? (bool?)null : (bool?)dt.Rows[0]["Sexo"];
					retObj._telefono					 = Convert.IsDBNull(dt.Rows[0]["Telefono"]) ? null : (string)dt.Rows[0]["Telefono"];
					retObj._email					 = Convert.IsDBNull(dt.Rows[0]["Email"]) ? null : (string)dt.Rows[0]["Email"];
				}
				return retObj;
			}
			catch
			{
				throw;
			}
			finally
			{
				staticConnection.Close();
				command.Dispose();
			}
		}

		///<Summary>
		///Delete one row by primary key(s)
		///this method allows the object to delete itself from the table Persona based on its primary key
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			SqlCommand	command = new SqlCommand();
			command.CommandText = InlineProcs.ctprPersona_DeleteOne;
			command.CommandType = CommandType.Text;
			command.Connection = _connectionProvider.Connection;
			command.Transaction = _connectionProvider.CurrentTransaction;

			try
			{
				command.Parameters.Add(new SqlParameter("@CI", SqlDbType.VarChar, 10, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, (object)_ci?? (object)DBNull.Value));

				command.ExecuteNonQuery();


			}
			catch
			{
				throw;
			}
			finally
			{
				command.Dispose();
			}
		}

		///<Summary>
		///Insert a new row
		///This method saves a new object to the table Persona
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Insert()
		{
			SqlCommand	command = new SqlCommand();
			command.CommandText = InlineProcs.ctprPersona_InsertOne;
			command.CommandType = CommandType.Text;
			command.Connection = _connectionProvider.Connection;
			command.Transaction = _connectionProvider.CurrentTransaction;

			try
			{
				command.Parameters.Add(new SqlParameter("@CI", SqlDbType.VarChar, 10, ParameterDirection.InputOutput, false, 0, 0, "", DataRowVersion.Proposed, (object)_ci?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Nombre", SqlDbType.VarChar, 30, ParameterDirection.InputOutput, false, 0, 0, "", DataRowVersion.Proposed, (object)_nombre?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@APellidoP", SqlDbType.VarChar, 20, ParameterDirection.InputOutput, false, 0, 0, "", DataRowVersion.Proposed, (object)_aPellidoP?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@APellidoM", SqlDbType.VarChar, 20, ParameterDirection.InputOutput, true, 0, 0, "", DataRowVersion.Proposed, (object)_aPellidoM?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Direccion", SqlDbType.VarChar, 4000, ParameterDirection.InputOutput, true, 0, 0, "", DataRowVersion.Proposed, (object)_direccion?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Sexo", SqlDbType.Bit, 1, ParameterDirection.InputOutput, false, 0, 0, "", DataRowVersion.Proposed, (object)_sexo?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Telefono", SqlDbType.VarChar, 15, ParameterDirection.InputOutput, true, 0, 0, "", DataRowVersion.Proposed, (object)_telefono?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Email", SqlDbType.VarChar, 100, ParameterDirection.InputOutput, true, 0, 0, "", DataRowVersion.Proposed, (object)_email?? (object)DBNull.Value));

				command.ExecuteNonQuery();


			}
			catch
			{
				throw;
			}
			finally
			{
				command.Dispose();
			}
		}

		///<Summary>
		///Select all rows
		///This method returns all data rows in the table Persona
		///</Summary>
		///<returns>
		///List-DAOPersona.
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static List<DAOPersona> SelectAll()
		{
			SqlCommand	command = new SqlCommand();
			command.CommandText = InlineProcs.ctprPersona_SelectAll;
			command.CommandType = CommandType.Text;
			SqlConnection staticConnection = StaticSqlConnection;
			command.Connection = staticConnection;

			DataTable dt = new DataTable("Persona");
			SqlDataAdapter sqlAdapter = new SqlDataAdapter(command);
			try
			{

				staticConnection.Open();
				sqlAdapter.Fill(dt);


				List<DAOPersona> objList = new List<DAOPersona>();
				if(dt.Rows.Count > 0)
				{
					foreach(DataRow row in dt.Rows)
					{
						DAOPersona retObj = new DAOPersona();
						retObj._ci					 = Convert.IsDBNull(row["CI"]) ? null : (string)row["CI"];
						retObj._nombre					 = Convert.IsDBNull(row["Nombre"]) ? null : (string)row["Nombre"];
						retObj._aPellidoP					 = Convert.IsDBNull(row["APellidoP"]) ? null : (string)row["APellidoP"];
						retObj._aPellidoM					 = Convert.IsDBNull(row["APellidoM"]) ? null : (string)row["APellidoM"];
						retObj._direccion					 = Convert.IsDBNull(row["Direccion"]) ? null : (string)row["Direccion"];
						retObj._sexo					 = Convert.IsDBNull(row["Sexo"]) ? (bool?)null : (bool?)row["Sexo"];
						retObj._telefono					 = Convert.IsDBNull(row["Telefono"]) ? null : (string)row["Telefono"];
						retObj._email					 = Convert.IsDBNull(row["Email"]) ? null : (string)row["Email"];
						objList.Add(retObj);
					}
				}
				return objList;
			}
			catch
			{
				throw;
			}
			finally
			{
				staticConnection.Close();
				command.Dispose();
			}
		}

		///<Summary>
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 SelectAllCount()
		{
			SqlCommand	command = new SqlCommand();
			command.CommandText = InlineProcs.ctprPersona_SelectAllCount;
			command.CommandType = CommandType.Text;
			SqlConnection staticConnection = StaticSqlConnection;
			command.Connection = staticConnection;

			try
			{

				staticConnection.Open();
				Int32 retCount = (Int32)command.ExecuteScalar();

				return retCount;			}
			catch
			{
				throw;
			}
			finally
			{
				staticConnection.Close();
				command.Dispose();
			}
		}

		///<Summary>
		///</Summary>
		///<returns>
		///List-DAOPersona.
		///</returns>
		///<parameters>
		///DAOPersona daoPersona
		///</parameters>
		public static List<DAOPersona> SelectAllBySearchFields(DAOPersona daoPersona)
		{
			SqlCommand	command = new SqlCommand();
			command.CommandText = InlineProcs.ctprPersona_SelectAllBySearchFields;
			command.CommandType = CommandType.Text;
			SqlConnection staticConnection = StaticSqlConnection;
			command.Connection = staticConnection;

			DataTable dt = new DataTable("Persona");
			SqlDataAdapter sqlAdapter = new SqlDataAdapter(command);
			try
			{
				command.Parameters.Add(new SqlParameter("@CI", SqlDbType.VarChar, 10, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, (object)daoPersona.Ci?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Nombre", SqlDbType.VarChar, 30, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, (object)daoPersona.Nombre?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@APellidoP", SqlDbType.VarChar, 20, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, (object)daoPersona.APellidoP?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@APellidoM", SqlDbType.VarChar, 20, ParameterDirection.Input, true, 0, 0, "", DataRowVersion.Proposed, (object)daoPersona.APellidoM?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Direccion", SqlDbType.VarChar, 4000, ParameterDirection.Input, true, 0, 0, "", DataRowVersion.Proposed, (object)daoPersona.Direccion?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Sexo", SqlDbType.Bit, 1, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, (object)daoPersona.Sexo?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Telefono", SqlDbType.VarChar, 15, ParameterDirection.Input, true, 0, 0, "", DataRowVersion.Proposed, (object)daoPersona.Telefono?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Email", SqlDbType.VarChar, 100, ParameterDirection.Input, true, 0, 0, "", DataRowVersion.Proposed, (object)daoPersona.Email?? (object)DBNull.Value));

				staticConnection.Open();
				sqlAdapter.Fill(dt);


				List<DAOPersona> objList = new List<DAOPersona>();
				if(dt.Rows.Count > 0)
				{
					foreach(DataRow row in dt.Rows)
					{
						DAOPersona retObj = new DAOPersona();
						retObj._ci					 = Convert.IsDBNull(row["CI"]) ? null : (string)row["CI"];
						retObj._nombre					 = Convert.IsDBNull(row["Nombre"]) ? null : (string)row["Nombre"];
						retObj._aPellidoP					 = Convert.IsDBNull(row["APellidoP"]) ? null : (string)row["APellidoP"];
						retObj._aPellidoM					 = Convert.IsDBNull(row["APellidoM"]) ? null : (string)row["APellidoM"];
						retObj._direccion					 = Convert.IsDBNull(row["Direccion"]) ? null : (string)row["Direccion"];
						retObj._sexo					 = Convert.IsDBNull(row["Sexo"]) ? (bool?)null : (bool?)row["Sexo"];
						retObj._telefono					 = Convert.IsDBNull(row["Telefono"]) ? null : (string)row["Telefono"];
						retObj._email					 = Convert.IsDBNull(row["Email"]) ? null : (string)row["Email"];
						objList.Add(retObj);
					}
				}
				return objList;
			}
			catch
			{
				throw;
			}
			finally
			{
				staticConnection.Close();
				command.Dispose();
			}
		}

		///<Summary>
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///DAOPersona daoPersona
		///</parameters>
		public static Int32 SelectAllBySearchFieldsCount(DAOPersona daoPersona)
		{
			SqlCommand	command = new SqlCommand();
			command.CommandText = InlineProcs.ctprPersona_SelectAllBySearchFieldsCount;
			command.CommandType = CommandType.Text;
			SqlConnection staticConnection = StaticSqlConnection;
			command.Connection = staticConnection;

			try
			{
				command.Parameters.Add(new SqlParameter("@CI", SqlDbType.VarChar, 10, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, (object)daoPersona.Ci?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Nombre", SqlDbType.VarChar, 30, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, (object)daoPersona.Nombre?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@APellidoP", SqlDbType.VarChar, 20, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, (object)daoPersona.APellidoP?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@APellidoM", SqlDbType.VarChar, 20, ParameterDirection.Input, true, 0, 0, "", DataRowVersion.Proposed, (object)daoPersona.APellidoM?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Direccion", SqlDbType.VarChar, 4000, ParameterDirection.Input, true, 0, 0, "", DataRowVersion.Proposed, (object)daoPersona.Direccion?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Sexo", SqlDbType.Bit, 1, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, (object)daoPersona.Sexo?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Telefono", SqlDbType.VarChar, 15, ParameterDirection.Input, true, 0, 0, "", DataRowVersion.Proposed, (object)daoPersona.Telefono?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Email", SqlDbType.VarChar, 100, ParameterDirection.Input, true, 0, 0, "", DataRowVersion.Proposed, (object)daoPersona.Email?? (object)DBNull.Value));

				staticConnection.Open();
				Int32 retCount = (Int32)command.ExecuteScalar();

				return retCount;			}
			catch
			{
				throw;
			}
			finally
			{
				staticConnection.Close();
				command.Dispose();
			}
		}

		///<Summary>
		///Update one row by primary key(s)
		///This method allows the object to update itself in the table Persona based on its primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Update()
		{
			SqlCommand	command = new SqlCommand();
			command.CommandText = InlineProcs.ctprPersona_UpdateOne;
			command.CommandType = CommandType.Text;
			command.Connection = _connectionProvider.Connection;
			command.Transaction = _connectionProvider.CurrentTransaction;

			try
			{
				command.Parameters.Add(new SqlParameter("@CI", SqlDbType.VarChar, 10, ParameterDirection.InputOutput, false, 0, 0, "", DataRowVersion.Proposed, (object)_ci?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Nombre", SqlDbType.VarChar, 30, ParameterDirection.InputOutput, false, 0, 0, "", DataRowVersion.Proposed, (object)_nombre?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@APellidoP", SqlDbType.VarChar, 20, ParameterDirection.InputOutput, false, 0, 0, "", DataRowVersion.Proposed, (object)_aPellidoP?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@APellidoM", SqlDbType.VarChar, 20, ParameterDirection.InputOutput, true, 0, 0, "", DataRowVersion.Proposed, (object)_aPellidoM?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Direccion", SqlDbType.VarChar, 4000, ParameterDirection.InputOutput, true, 0, 0, "", DataRowVersion.Proposed, (object)_direccion?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Sexo", SqlDbType.Bit, 1, ParameterDirection.InputOutput, false, 0, 0, "", DataRowVersion.Proposed, (object)_sexo?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Telefono", SqlDbType.VarChar, 15, ParameterDirection.InputOutput, true, 0, 0, "", DataRowVersion.Proposed, (object)_telefono?? (object)DBNull.Value));
				command.Parameters.Add(new SqlParameter("@Email", SqlDbType.VarChar, 100, ParameterDirection.InputOutput, true, 0, 0, "", DataRowVersion.Proposed, (object)_email?? (object)DBNull.Value));

				command.ExecuteNonQuery();


			}
			catch
			{
				throw;
			}
			finally
			{
				command.Dispose();
			}
		}

		#endregion

		#region member properties

		public string Ci
		{
			get
			{
				return _ci;
			}
			set
			{
				_ci = value;
			}
		}

		public string Nombre
		{
			get
			{
				return _nombre;
			}
			set
			{
				_nombre = value;
			}
		}

		public string APellidoP
		{
			get
			{
				return _aPellidoP;
			}
			set
			{
				_aPellidoP = value;
			}
		}

		public string APellidoM
		{
			get
			{
				return _aPellidoM;
			}
			set
			{
				_aPellidoM = value;
			}
		}

		public string Direccion
		{
			get
			{
				return _direccion;
			}
			set
			{
				_direccion = value;
			}
		}

		public bool? Sexo
		{
			get
			{
				return _sexo;
			}
			set
			{
				_sexo = value;
			}
		}

		public string Telefono
		{
			get
			{
				return _telefono;
			}
			set
			{
				_telefono = value;
			}
		}

		public string Email
		{
			get
			{
				return _email;
			}
			set
			{
				_email = value;
			}
		}

		#endregion
	}
}

#region inline sql procs
namespace studio.DataObjects
{
	public partial class InlineProcs
	{
		internal static string ctprPersona_SelectOne = @"
			-- Select one row based on the primary key(s)
			-- selects all rows from the table
			SELECT 
			[CI]
			,[Nombre]
			,[APellidoP]
			,[APellidoM]
			,[Direccion]
			,[Sexo]
			,[Telefono]
			,[Email]
			FROM [dbo].[Persona]
			WHERE 
			[CI] = @CI
			";

		internal static string ctprPersona_DeleteOne = @"
			-- Delete a row based on the primary key(s)
			-- delete all matching from the table
			DELETE [dbo].[Persona]
			WHERE 
			[CI] = @CI
			";

		internal static string ctprPersona_InsertOne = @"
			-- Insert a new row
			-- inserts a new row into the table
			INSERT [dbo].[Persona]
			(
			[CI]
			,[Nombre]
			,[APellidoP]
			,[APellidoM]
			,[Direccion]
			,[Sexo]
			,[Telefono]
			,[Email]
			)
			VALUES
			(
			@CI
			,@Nombre
			,@APellidoP
			,@APellidoM
			,@Direccion
			,@Sexo
			,@Telefono
			,@Email
			)
			SELECT 
			@CI = [CI]
			,@Nombre = [Nombre]
			,@APellidoP = [APellidoP]
			,@APellidoM = [APellidoM]
			,@Direccion = [Direccion]
			,@Sexo = [Sexo]
			,@Telefono = [Telefono]
			,@Email = [Email]
			FROM [dbo].[Persona]
			WHERE 
			[CI] = @CI
			";

		internal static string ctprPersona_SelectAll = @"
			-- Select All rows
			-- selects all rows from the table
			SELECT 
			[CI]
			,[Nombre]
			,[APellidoP]
			,[APellidoM]
			,[Direccion]
			,[Sexo]
			,[Telefono]
			,[Email]
			FROM [dbo].[Persona]
			";

		internal static string ctprPersona_SelectAllCount = @"
			
			-- selects count of all rows from the table
			SELECT COUNT(*)
			FROM [dbo].[Persona]
			";

		internal static string ctprPersona_SelectAllBySearchFields = @"
			
			-- selects all rows from the table according to search criteria
			SELECT 
			[CI],
			[Nombre],
			[APellidoP],
			[APellidoM],
			[Direccion],
			[Sexo],
			[Telefono],
			[Email]
			FROM [dbo].[Persona]
			WHERE 
			([CI] LIKE @CI OR @CI is null)
			AND ([Nombre] LIKE @Nombre OR @Nombre is null)
			AND ([APellidoP] LIKE @APellidoP OR @APellidoP is null)
			AND ([APellidoM] LIKE @APellidoM OR @APellidoM is null)
			AND ([Direccion] LIKE @Direccion OR @Direccion is null)
			AND ([Sexo] LIKE @Sexo OR @Sexo is null)
			AND ([Telefono] LIKE @Telefono OR @Telefono is null)
			AND ([Email] LIKE @Email OR @Email is null)
			";

		internal static string ctprPersona_SelectAllBySearchFieldsCount = @"
			-- Get count of rows returnable by this query
			-- selects count of all rows from the table according to search criteria
			SELECT COUNT(*)
			FROM [dbo].[Persona]
			WHERE 
			([CI] LIKE @CI OR @CI is null)
			AND ([Nombre] LIKE @Nombre OR @Nombre is null)
			AND ([APellidoP] LIKE @APellidoP OR @APellidoP is null)
			AND ([APellidoM] LIKE @APellidoM OR @APellidoM is null)
			AND ([Direccion] LIKE @Direccion OR @Direccion is null)
			AND ([Sexo] LIKE @Sexo OR @Sexo is null)
			AND ([Telefono] LIKE @Telefono OR @Telefono is null)
			AND ([Email] LIKE @Email OR @Email is null)
			";

		internal static string ctprPersona_UpdateOne = @"
			-- Update one row based on the primary key(s)
			-- updates a row in the table based on the primary key
			
			UPDATE [dbo].[Persona]
			SET
			[Nombre] = @Nombre
			,[APellidoP] = @APellidoP
			,[APellidoM] = @APellidoM
			,[Direccion] = @Direccion
			,[Sexo] = @Sexo
			,[Telefono] = @Telefono
			,[Email] = @Email
			WHERE 
			[CI] = @CI
			SELECT 
			@CI = [CI]
			,@Nombre = [Nombre]
			,@APellidoP = [APellidoP]
			,@APellidoM = [APellidoM]
			,@Direccion = [Direccion]
			,@Sexo = [Sexo]
			,@Telefono = [Telefono]
			,@Email = [Email]
			FROM [dbo].[Persona]
			WHERE 
			[CI] = @CI
			";

	}
}
#endregion
